/*! For license information please see main.bundle.5fba0f7a72a081ab8d42.js.LICENSE.txt */
(()=>{var e,t,n={703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,l,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var s=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),E=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),L=Symbol.for("react.context"),P=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),z=Symbol.for("react.suspense_list"),T=Symbol.for("react.memo"),O=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var M=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var R=Symbol.iterator;function I(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=R&&e[R]||e["@@iterator"])?e:null}var F,A=Object.assign;function j(e){if(void 0===F)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);F=t&&t[1]||""}return"\n"+F+e}var D=!1;function U(e,t){if(!e||D)return"";D=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i]){var u="\n"+a[o].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=o&&0<=i);break}}}finally{D=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?j(e):""}function V(e){switch(e.tag){case 5:return j(e.type);case 16:return j("Lazy");case 13:return j("Suspense");case 19:return j("SuspenseList");case 0:case 2:case 15:return e=U(e.type,!1);case 11:return e=U(e.type.render,!1);case 1:return e=U(e.type,!0);default:return""}}function B(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case E:return"Portal";case x:return"Profiler";case C:return"StrictMode";case N:return"Suspense";case z:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case L:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case T:return null!==(t=e.displayName||null)?t:B(e.type)||"Memo";case O:t=e._payload,e=e._init;try{return B(e(t))}catch(e){}}return null}function $(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return B(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return A({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function q(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Y(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function X(e,t){Y(e,t);var n=W(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return A({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(te(n)){if(1<n.length)throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function le(e,t){var n=W(t.value),r=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,se,fe=(se=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return se(e,t)}))}:se);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ve(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ge=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Se=null,Ce=null;function xe(e){if(e=ba(e)){if("function"!=typeof Ee)throw Error(l(280));var t=e.stateNode;t&&(t=ka(t),Ee(e.stateNode,e.type,t))}}function _e(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Le(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Pe(e,t){return e(t)}function Ne(){}var ze=!1;function Te(e,t,n){if(ze)return e(t,n);ze=!0;try{return Pe(e,t,n)}finally{ze=!1,(null!==Se||null!==Ce)&&(Ne(),Le())}}function Oe(e,t){var n=e.stateNode;if(null===n)return null;var r=ka(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Me=!1;if(s)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){Me=!0}}),window.addEventListener("test",Re,Re),window.removeEventListener("test",Re,Re)}catch(se){Me=!1}function Ie(e,t,n,r,a,l,o,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Fe=!1,Ae=null,je=!1,De=null,Ue={onError:function(e){Fe=!0,Ae=e}};function Ve(e,t,n,r,a,l,o,i,u){Fe=!1,Ae=null,Ie.apply(Ue,arguments)}function Be(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function $e(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function We(e){if(Be(e)!==e)throw Error(l(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Be(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return We(a),e;if(o===r)return We(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var Ge=a.unstable_scheduleCallback,Ke=a.unstable_cancelCallback,Ze=a.unstable_shouldYield,qe=a.unstable_requestPaint,Ye=a.unstable_now,Xe=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,lt=null;var ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2;var ct=64,st=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~a;0!==i?r=ft(i):0!==(l&=o)&&(r=ft(l))}else 0!==(o=n&~a)?r=ft(o):0!==l&&(r=ft(l));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(l=t&-t)||16===a&&0!=(4194240&l)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-ot(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function vt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kt,Et,St,Ct,xt,_t=!1,Lt=[],Pt=null,Nt=null,zt=null,Tt=new Map,Ot=new Map,Mt=[],Rt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function It(e,t){switch(e){case"focusin":case"focusout":Pt=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":zt=null;break;case"pointerover":case"pointerout":Tt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ot.delete(t.pointerId)}}function Ft(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:l,targetContainers:[a]},null!==t&&(null!==(t=ba(t))&&Et(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function At(e){var t=ya(e.target);if(null!==t){var n=Be(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=$e(n)))return e.blockedOn=t,void xt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&Et(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function Dt(e,t,n){jt(e)&&n.delete(t)}function Ut(){_t=!1,null!==Pt&&jt(Pt)&&(Pt=null),null!==Nt&&jt(Nt)&&(Nt=null),null!==zt&&jt(zt)&&(zt=null),Tt.forEach(Dt),Ot.forEach(Dt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ut)))}function Bt(e){function t(t){return Vt(t,e)}if(0<Lt.length){Vt(Lt[0],e);for(var n=1;n<Lt.length;n++){var r=Lt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Pt&&Vt(Pt,e),null!==Nt&&Vt(Nt,e),null!==zt&&Vt(zt,e),Tt.forEach(t),Ot.forEach(t),n=0;n<Mt.length;n++)(r=Mt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Mt.length&&null===(n=Mt[0]).blockedOn;)At(n),null===n.blockedOn&&Mt.shift()}var $t=w.ReactCurrentBatchConfig,Wt=!0;function Ht(e,t,n,r){var a=bt,l=$t.transition;$t.transition=null;try{bt=1,Gt(e,t,n,r)}finally{bt=a,$t.transition=l}}function Qt(e,t,n,r){var a=bt,l=$t.transition;$t.transition=null;try{bt=4,Gt(e,t,n,r)}finally{bt=a,$t.transition=l}}function Gt(e,t,n,r){if(Wt){var a=Zt(e,t,n,r);if(null===a)Wr(e,t,r,Kt,n),It(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Pt=Ft(Pt,e,t,n,r,a),!0;case"dragenter":return Nt=Ft(Nt,e,t,n,r,a),!0;case"mouseover":return zt=Ft(zt,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return Tt.set(l,Ft(Tt.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,Ot.set(l,Ft(Ot.get(l)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(It(e,r),4&t&&-1<Rt.indexOf(e)){for(;null!==a;){var l=ba(a);if(null!==l&&kt(l),null===(l=Zt(e,t,n,r))&&Wr(e,t,r,Kt,n),l===a)break;a=l}null!==a&&r.stopPropagation()}else Wr(e,t,r,null,n)}}var Kt=null;function Zt(e,t,n,r){if(Kt=null,null!==(e=ya(e=ke(r))))if(null===(t=Be(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=$e(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Yt=null,Xt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Xt,r=n.length,a="value"in Yt?Yt.value:Yt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return A(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var ln,on,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=an(cn),fn=A({},cn,{view:0,detail:0}),dn=an(fn),pn=A({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(ln=e.screenX-un.screenX,on=e.screenY-un.screenY):on=ln=0,un=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:on}}),hn=an(pn),mn=an(A({},pn,{dataTransfer:0})),vn=an(A({},fn,{relatedTarget:0})),gn=an(A({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=A({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(yn),wn=an(A({},cn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function xn(){return Cn}var _n=A({},fn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ln=an(_n),Pn=an(A({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=an(A({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),zn=an(A({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=A({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),On=an(Tn),Mn=[9,13,27,32],Rn=s&&"CompositionEvent"in window,In=null;s&&"documentMode"in document&&(In=document.documentMode);var Fn=s&&"TextEvent"in window&&!In,An=s&&(!Rn||In&&8<In&&11>=In),jn=String.fromCharCode(32),Dn=!1;function Un(e,t){switch(e){case"keyup":return-1!==Mn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Bn=!1;var $n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$n[e.type]:"textarea"===t}function Hn(e,t,n,r){_e(r),0<(t=Qr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,Gn=null;function Kn(e){jr(e,0)}function Zn(e){if(G(wa(e)))return e}function qn(e,t){if("change"===e)return t}var Yn=!1;if(s){var Xn;if(s){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Xn=Jn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),Gn=Qn=null)}function nr(e){if("value"===e.propertyName&&Zn(Gn)){var t=[];Hn(t,Gn,e,ke(e)),Te(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Gn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zn(Gn)}function lr(e,t){if("click"===e)return Zn(t)}function or(e,t){if("input"===e||"change"===e)return Zn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!f.call(t,a)||!ir(e[a],t[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,l=Math.min(r.start,a);r=void 0===r.end?l:Math.min(r.end,a),!e.extend&&l>r&&(a=r,r=l,l=a),a=sr(n,l);var o=sr(n,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),l>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=s&&"documentMode"in document&&11>=document.documentMode,vr=null,gr=null,yr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==vr||vr!==K(r)||("selectionStart"in(r=vr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=Qr(gr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=vr)))}function kr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Er={animationend:kr("Animation","AnimationEnd"),animationiteration:kr("Animation","AnimationIteration"),animationstart:kr("Animation","AnimationStart"),transitionend:kr("Transition","TransitionEnd")},Sr={},Cr={};function xr(e){if(Sr[e])return Sr[e];if(!Er[e])return e;var t,n=Er[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return Sr[e]=n[t];return e}s&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var _r=xr("animationend"),Lr=xr("animationiteration"),Pr=xr("animationstart"),Nr=xr("transitionend"),zr=new Map,Tr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Or(e,t){zr.set(e,t),u(t,[e])}for(var Mr=0;Mr<Tr.length;Mr++){var Rr=Tr[Mr];Or(Rr.toLowerCase(),"on"+(Rr[0].toUpperCase()+Rr.slice(1)))}Or(_r,"onAnimationEnd"),Or(Lr,"onAnimationIteration"),Or(Pr,"onAnimationStart"),Or("dblclick","onDoubleClick"),Or("focusin","onFocus"),Or("focusout","onBlur"),Or(Nr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ir="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Fr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));function Ar(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,c){if(Ve.apply(this,arguments),Fe){if(!Fe)throw Error(l(198));var s=Ae;Fe=!1,Ae=null,je||(je=!0,De=s)}}(r,t,void 0,e),e.currentTarget=null}function jr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==l&&a.isPropagationStopped())break e;Ar(a,i,c),l=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,c=i.currentTarget,i=i.listener,u!==l&&a.isPropagationStopped())break e;Ar(a,i,c),l=u}}}if(je)throw e=De,je=!1,De=null,e}function Dr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||($r(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),$r(n,e,r,t)}var Vr="_reactListening"+Math.random().toString(36).slice(2);function Br(e){if(!e[Vr]){e[Vr]=!0,o.forEach((function(t){"selectionchange"!==t&&(Fr.has(t)||Ur(t,!1,e),Ur(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Vr]||(t[Vr]=!0,Ur("selectionchange",!1,t))}}function $r(e,t,n,r){switch(qt(t)){case 1:var a=Ht;break;case 4:a=Qt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!Me||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Wr(e,t,n,r,a){var l=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=ya(i)))return;if(5===(u=o.tag)||6===u){r=l=o;continue e}i=i.parentNode}}r=r.return}Te((function(){var r=l,a=ke(n),o=[];e:{var i=zr.get(e);if(void 0!==i){var u=sn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=Ln;break;case"focusin":c="focus",u=vn;break;case"focusout":c="blur",u=vn;break;case"beforeblur":case"afterblur":u=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case _r:case Lr:case Pr:u=gn;break;case Nr:u=zn;break;case"scroll":u=dn;break;case"wheel":u=On;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Oe(h,d))&&s.push(Hr(h,m,p)))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),o.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===we||!(c=n.relatedTarget||n.fromElement)||!ya(c)&&!c[ha])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?ya(c):null)&&(c!==(f=Be(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=hn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Pn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:wa(u),p=null==c?i:wa(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,ya(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Gr(p))h++;for(p=0,m=d;m;m=Gr(m))p++;for(;0<h-p;)s=Gr(s),h--;for(;0<p-h;)d=Gr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Gr(s),d=Gr(d)}s=null}else s=null;null!==u&&Kr(o,i,u,s,!1),null!==c&&null!==f&&Kr(o,f,c,s,!0)}if("select"===(u=(i=r?wa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=qn;else if(Wn(i))if(Yn)v=or;else{v=ar;var g=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=lr);switch(v&&(v=v(e,r))?Hn(o,v,n,a):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&ee(i,"number",i.value)),g=r?wa(r):window,e){case"focusin":(Wn(g)||"true"===g.contentEditable)&&(vr=g,gr=r,yr=null);break;case"focusout":yr=gr=vr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(o,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":wr(o,n,a)}var y;if(Rn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Bn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(An&&"ko"!==n.locale&&(Bn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Bn&&(y=en()):(Xt="value"in(Yt=a)?Yt.value:Yt.textContent,Bn=!0)),0<(g=Qr(r,b)).length&&(b=new wn(b,e,null,n,a),o.push({event:b,listeners:g}),y?b.data=y:null!==(y=Vn(n))&&(b.data=y))),(y=Fn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Dn=!0,jn);case"textInput":return(e=t.data)===jn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Bn)return"compositionend"===e||!Rn&&Un(e,t)?(e=en(),Jt=Xt=Yt=null,Bn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return An&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Qr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y))}jr(o,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Oe(e,n))&&r.unshift(Hr(e,l,a)),null!=(l=Oe(e,t))&&r.push(Hr(e,l,a))),e=e.return}return r}function Gr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=Oe(n,l))&&o.unshift(Hr(n,u,i)):a||null!=(u=Oe(n,l))&&o.push(Hr(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Zr=/\r\n?/g,qr=/\u0000|\uFFFD/g;function Yr(e){return("string"==typeof e?e:""+e).replace(Zr,"\n").replace(qr,"")}function Xr(e,t,n){if(t=Yr(t),Yr(e)!==t&&n)throw Error(l(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,la="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==la?function(e){return la.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Bt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Bt(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function sa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,va="__reactListeners$"+fa,ga="__reactHandles$"+fa;function ya(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=sa(e);null!==e;){if(n=e[da])return n;e=sa(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function ka(e){return e[pa]||null}var Ea=[],Sa=-1;function Ca(e){return{current:e}}function xa(e){0>Sa||(e.current=Ea[Sa],Ea[Sa]=null,Sa--)}function _a(e,t){Sa++,Ea[Sa]=e.current,e.current=t}var La={},Pa=Ca(La),Na=Ca(!1),za=La;function Ta(e,t){var n=e.type.contextTypes;if(!n)return La;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function Oa(e){return null!=(e=e.childContextTypes)}function Ma(){xa(Na),xa(Pa)}function Ra(e,t,n){if(Pa.current!==La)throw Error(l(168));_a(Pa,t),_a(Na,n)}function Ia(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(l(108,$(e)||"Unknown",a));return A({},n,r)}function Fa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||La,za=Pa.current,_a(Pa,e),_a(Na,Na.current),!0}function Aa(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Ia(e,t,za),r.__reactInternalMemoizedMergedChildContext=e,xa(Na),xa(Pa),_a(Pa,e)):xa(Na),_a(Na,n)}var ja=null,Da=!1,Ua=!1;function Va(e){null===ja?ja=[e]:ja.push(e)}function Ba(){if(!Ua&&null!==ja){Ua=!0;var e=0,t=bt;try{var n=ja;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}ja=null,Da=!1}catch(t){throw null!==ja&&(ja=ja.slice(e+1)),Ge(Je,Ba),t}finally{bt=t,Ua=!1}}return null}var $a=[],Wa=0,Ha=null,Qa=0,Ga=[],Ka=0,Za=null,qa=1,Ya="";function Xa(e,t){$a[Wa++]=Qa,$a[Wa++]=Ha,Ha=e,Qa=t}function Ja(e,t,n){Ga[Ka++]=qa,Ga[Ka++]=Ya,Ga[Ka++]=Za,Za=e;var r=qa;e=Ya;var a=32-ot(r)-1;r&=~(1<<a),n+=1;var l=32-ot(t)+a;if(30<l){var o=a-a%5;l=(r&(1<<o)-1).toString(32),r>>=o,a-=o,qa=1<<32-ot(t)+a|n<<a|r,Ya=l+e}else qa=1<<l|n<<a|r,Ya=e}function el(e){null!==e.return&&(Xa(e,1),Ja(e,1,0))}function tl(e){for(;e===Ha;)Ha=$a[--Wa],$a[Wa]=null,Qa=$a[--Wa],$a[Wa]=null;for(;e===Za;)Za=Ga[--Ka],Ga[Ka]=null,Ya=Ga[--Ka],Ga[Ka]=null,qa=Ga[--Ka],Ga[Ka]=null}var nl=null,rl=null,al=!1,ll=null;function ol(e,t){var n=Tc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function il(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nl=e,rl=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nl=e,rl=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Za?{id:qa,overflow:Ya}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Tc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nl=e,rl=null,!0);default:return!1}}function ul(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function cl(e){if(al){var t=rl;if(t){var n=t;if(!il(e,t)){if(ul(e))throw Error(l(418));t=ca(n.nextSibling);var r=nl;t&&il(e,t)?ol(r,n):(e.flags=-4097&e.flags|2,al=!1,nl=e)}}else{if(ul(e))throw Error(l(418));e.flags=-4097&e.flags|2,al=!1,nl=e}}}function sl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nl=e}function fl(e){if(e!==nl)return!1;if(!al)return sl(e),al=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=rl)){if(ul(e))throw dl(),Error(l(418));for(;t;)ol(e,t),t=ca(t.nextSibling)}if(sl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){rl=ca(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}rl=null}}else rl=nl?ca(e.stateNode.nextSibling):null;return!0}function dl(){for(var e=rl;e;)e=ca(e.nextSibling)}function pl(){rl=nl=null,al=!1}function hl(e){null===ll?ll=[e]:ll.push(e)}var ml=w.ReactCurrentBatchConfig;function vl(e,t){if(e&&e.defaultProps){for(var n in t=A({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var gl=Ca(null),yl=null,bl=null,wl=null;function kl(){wl=bl=yl=null}function El(e){var t=gl.current;xa(gl),e._currentValue=t}function Sl(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Cl(e,t){yl=e,wl=bl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wi=!0),e.firstContext=null)}function xl(e){var t=e._currentValue;if(wl!==e)if(e={context:e,memoizedValue:t,next:null},null===bl){if(null===yl)throw Error(l(308));bl=e,yl.dependencies={lanes:0,firstContext:e}}else bl=bl.next=e;return t}var _l=null;function Ll(e){null===_l?_l=[e]:_l.push(e)}function Pl(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Ll(t)):(n.next=a.next,a.next=n),t.interleaved=n,Nl(e,r)}function Nl(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var zl=!1;function Tl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ol(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ml(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Rl(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Pu)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Nl(e,n)}return null===(a=r.interleaved)?(t.next=t,Ll(r)):(t.next=a.next,a.next=t),r.interleaved=t,Nl(e,n)}function Il(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Fl(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Al(e,t,n,r){var a=e.updateQueue;zl=!1;var l=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var u=i,c=u.next;u.next=null,null===o?l=c:o.next=c,o=u;var s=e.alternate;null!==s&&((i=(s=s.updateQueue).lastBaseUpdate)!==o&&(null===i?s.firstBaseUpdate=c:i.next=c,s.lastBaseUpdate=u))}if(null!==l){var f=a.baseState;for(o=0,s=c=u=null,i=l;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==s&&(s=s.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=A({},f,d);break e;case 2:zl=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===s?(c=s=p,u=f):s=s.next=p,o|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===s&&(u=f),a.baseState=u,a.firstBaseUpdate=c,a.lastBaseUpdate=s,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===l&&(a.shared.lanes=0);Fu|=o,e.lanes=o,e.memoizedState=f}}function jl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var Dl=(new r.Component).refs;function Ul(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:A({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Vl={isMounted:function(e){return!!(e=e._reactInternals)&&Be(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),l=Ml(r,a);l.payload=t,null!=n&&(l.callback=n),null!==(t=Rl(e,l,a))&&(nc(t,e,a,r),Il(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),l=Ml(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),null!==(t=Rl(e,l,a))&&(nc(t,e,a,r),Il(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),r=tc(e),a=Ml(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=Rl(e,a,r))&&(nc(t,e,r,n),Il(t,e,r))}};function Bl(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!t.prototype||!t.prototype.isPureReactComponent||(!ur(n,r)||!ur(a,l))}function $l(e,t,n){var r=!1,a=La,l=t.contextType;return"object"==typeof l&&null!==l?l=xl(l):(a=Oa(t)?za:Pa.current,l=(r=null!=(r=t.contextTypes))?Ta(e,a):La),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Vl,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function Wl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Vl.enqueueReplaceState(t,t.state,null)}function Hl(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Dl,Tl(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=xl(l):(l=Oa(t)?za:Pa.current,a.context=Ta(e,l)),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(Ul(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Vl.enqueueReplaceState(a,a.state,null),Al(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Ql(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=r,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;t===Dl&&(t=a.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Gl(e,t){throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Kl(e){return(0,e._init)(e._payload)}function Zl(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Mc(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ac(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){var l=n.type;return l===S?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===O&&Kl(l)===t.type)?((r=a(t,n.props)).ref=Ql(e,t,n),r.return=e,r):((r=Rc(n.type,n.key,n.props,null,e.mode,r)).ref=Ql(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=jc(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Ic(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Ac(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Rc(t.type,t.key,t.props,null,e.mode,n)).ref=Ql(e,null,t),n.return=e,n;case E:return(t=jc(t,e.mode,n)).return=e,t;case O:return d(e,(0,t._init)(t._payload),n)}if(te(t)||I(t))return(t=Ic(t,e.mode,n,null)).return=e,t;Gl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?c(e,t,n,r):null;case E:return n.key===a?s(e,t,n,r):null;case O:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||I(n))return null!==a?null:f(e,t,n,r,null);Gl(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case O:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||I(r))return f(t,e=e.get(n)||null,r,a,null);Gl(t,r)}return null}function m(a,l,i,u){for(var c=null,s=null,f=l,m=l=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(a,f,i[m],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(a,f),l=o(g,l,m),null===s?c=g:s.sibling=g,s=g,f=v}if(m===i.length)return n(a,f),al&&Xa(a,m),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(l=o(f,l,m),null===s?c=f:s.sibling=f,s=f);return al&&Xa(a,m),c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=o(v,l,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),al&&Xa(a,m),c}function v(a,i,u,c){var s=I(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,v=i=0,g=null,y=u.next();null!==m&&!y.done;v++,y=u.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(a,m,y.value,c);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(a,m),i=o(b,i,v),null===f?s=b:f.sibling=b,f=b,m=g}if(y.done)return n(a,m),al&&Xa(a,v),s;if(null===m){for(;!y.done;v++,y=u.next())null!==(y=d(a,y.value,c))&&(i=o(y,i,v),null===f?s=y:f.sibling=y,f=y);return al&&Xa(a,v),s}for(m=r(a,m);!y.done;v++,y=u.next())null!==(y=h(m,a,v,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),i=o(y,i,v),null===f?s=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(a,e)})),al&&Xa(a,v),s}return function e(r,l,o,u){if("object"==typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case k:e:{for(var c=o.key,s=l;null!==s;){if(s.key===c){if((c=o.type)===S){if(7===s.tag){n(r,s.sibling),(l=a(s,o.props.children)).return=r,r=l;break e}}else if(s.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===O&&Kl(c)===s.type){n(r,s.sibling),(l=a(s,o.props)).ref=Ql(r,s,o),l.return=r,r=l;break e}n(r,s);break}t(r,s),s=s.sibling}o.type===S?((l=Ic(o.props.children,r.mode,u,o.key)).return=r,r=l):((u=Rc(o.type,o.key,o.props,null,r.mode,u)).ref=Ql(r,l,o),u.return=r,r=u)}return i(r);case E:e:{for(s=o.key;null!==l;){if(l.key===s){if(4===l.tag&&l.stateNode.containerInfo===o.containerInfo&&l.stateNode.implementation===o.implementation){n(r,l.sibling),(l=a(l,o.children||[])).return=r,r=l;break e}n(r,l);break}t(r,l),l=l.sibling}(l=jc(o,r.mode,u)).return=r,r=l}return i(r);case O:return e(r,l,(s=o._init)(o._payload),u)}if(te(o))return m(r,l,o,u);if(I(o))return v(r,l,o,u);Gl(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==l&&6===l.tag?(n(r,l.sibling),(l=a(l,o)).return=r,r=l):(n(r,l),(l=Ac(o,r.mode,u)).return=r,r=l),i(r)):n(r,l)}}var ql=Zl(!0),Yl=Zl(!1),Xl={},Jl=Ca(Xl),eo=Ca(Xl),to=Ca(Xl);function no(e){if(e===Xl)throw Error(l(174));return e}function ro(e,t){switch(_a(to,t),_a(eo,e),_a(Jl,Xl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xa(Jl),_a(Jl,t)}function ao(){xa(Jl),xa(eo),xa(to)}function lo(e){no(to.current);var t=no(Jl.current),n=ue(t,e.type);t!==n&&(_a(eo,e),_a(Jl,n))}function oo(e){eo.current===e&&(xa(Jl),xa(eo))}var io=Ca(0);function uo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var co=[];function so(){for(var e=0;e<co.length;e++)co[e]._workInProgressVersionPrimary=null;co.length=0}var fo=w.ReactCurrentDispatcher,po=w.ReactCurrentBatchConfig,ho=0,mo=null,vo=null,go=null,yo=!1,bo=!1,wo=0,ko=0;function Eo(){throw Error(l(321))}function So(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function Co(e,t,n,r,a,o){if(ho=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fo.current=null===e||null===e.memoizedState?ii:ui,e=n(r,a),bo){o=0;do{if(bo=!1,wo=0,25<=o)throw Error(l(301));o+=1,go=vo=null,t.updateQueue=null,fo.current=ci,e=n(r,a)}while(bo)}if(fo.current=oi,t=null!==vo&&null!==vo.next,ho=0,go=vo=mo=null,yo=!1,t)throw Error(l(300));return e}function xo(){var e=0!==wo;return wo=0,e}function _o(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===go?mo.memoizedState=go=e:go=go.next=e,go}function Lo(){if(null===vo){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=vo.next;var t=null===go?mo.memoizedState:go.next;if(null!==t)go=t,vo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(vo=e).memoizedState,baseState:vo.baseState,baseQueue:vo.baseQueue,queue:vo.queue,next:null},null===go?mo.memoizedState=go=e:go=go.next=e}return go}function Po(e,t){return"function"==typeof t?t(e):t}function No(e){var t=Lo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=vo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var u=i=null,c=null,s=o;do{var f=s.lane;if((ho&f)===f)null!==c&&(c=c.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var d={lane:f,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};null===c?(u=c=d,i=r):c=c.next=d,mo.lanes|=f,Fu|=f}s=s.next}while(null!==s&&s!==o);null===c?i=r:c.next=u,ir(r,t.memoizedState)||(wi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,mo.lanes|=o,Fu|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function zo(e){var t=Lo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);ir(o,t.memoizedState)||(wi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function To(){}function Oo(e,t){var n=mo,r=Lo(),a=t(),o=!ir(r.memoizedState,a);if(o&&(r.memoizedState=a,wi=!0),r=r.queue,Wo(Io.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==go&&1&go.memoizedState.tag){if(n.flags|=2048,Do(9,Ro.bind(null,n,r,a,t),void 0,null),null===Nu)throw Error(l(349));0!=(30&ho)||Mo(n,t,a)}return a}function Mo(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ro(e,t,n,r){t.value=n,t.getSnapshot=r,Fo(t)&&Ao(e)}function Io(e,t,n){return n((function(){Fo(t)&&Ao(e)}))}function Fo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Ao(e){var t=Nl(e,1);null!==t&&nc(t,e,1,-1)}function jo(e){var t=_o();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Po,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,mo,e),[t.memoizedState,e]}function Do(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Uo(){return Lo().memoizedState}function Vo(e,t,n,r){var a=_o();mo.flags|=e,a.memoizedState=Do(1|t,n,void 0,void 0===r?null:r)}function Bo(e,t,n,r){var a=Lo();r=void 0===r?null:r;var l=void 0;if(null!==vo){var o=vo.memoizedState;if(l=o.destroy,null!==r&&So(r,o.deps))return void(a.memoizedState=Do(t,n,l,r))}mo.flags|=e,a.memoizedState=Do(1|t,n,l,r)}function $o(e,t){return Vo(8390656,8,e,t)}function Wo(e,t){return Bo(2048,8,e,t)}function Ho(e,t){return Bo(4,2,e,t)}function Qo(e,t){return Bo(4,4,e,t)}function Go(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ko(e,t,n){return n=null!=n?n.concat([e]):null,Bo(4,4,Go.bind(null,t,e),n)}function Zo(){}function qo(e,t){var n=Lo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&So(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Yo(e,t){var n=Lo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&So(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Xo(e,t,n){return 0==(21&ho)?(e.baseState&&(e.baseState=!1,wi=!0),e.memoizedState=n):(ir(n,t)||(n=mt(),mo.lanes|=n,Fu|=n,e.baseState=!0),t)}function Jo(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=po.transition;po.transition={};try{e(!1),t()}finally{bt=n,po.transition=r}}function ei(){return Lo().memoizedState}function ti(e,t,n){var r=tc(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ri(e))ai(t,n);else if(null!==(n=Pl(e,t,n,r))){nc(n,e,r,ec()),li(n,t,r)}}function ni(e,t,n){var r=tc(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ri(e))ai(t,a);else{var l=e.alternate;if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=l(o,n);if(a.hasEagerState=!0,a.eagerState=i,ir(i,o)){var u=t.interleaved;return null===u?(a.next=a,Ll(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Pl(e,t,a,r))&&(nc(n,e,r,a=ec()),li(n,t,r))}}function ri(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function ai(e,t){bo=yo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function li(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var oi={readContext:xl,useCallback:Eo,useContext:Eo,useEffect:Eo,useImperativeHandle:Eo,useInsertionEffect:Eo,useLayoutEffect:Eo,useMemo:Eo,useReducer:Eo,useRef:Eo,useState:Eo,useDebugValue:Eo,useDeferredValue:Eo,useTransition:Eo,useMutableSource:Eo,useSyncExternalStore:Eo,useId:Eo,unstable_isNewReconciler:!1},ii={readContext:xl,useCallback:function(e,t){return _o().memoizedState=[e,void 0===t?null:t],e},useContext:xl,useEffect:$o,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Vo(4194308,4,Go.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Vo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Vo(4,2,e,t)},useMemo:function(e,t){var n=_o();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=_o();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ti.bind(null,mo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},_o().memoizedState=e},useState:jo,useDebugValue:Zo,useDeferredValue:function(e){return _o().memoizedState=e},useTransition:function(){var e=jo(!1),t=e[0];return e=Jo.bind(null,e[1]),_o().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=mo,a=_o();if(al){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===Nu)throw Error(l(349));0!=(30&ho)||Mo(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,$o(Io.bind(null,r,o,e),[e]),r.flags|=2048,Do(9,Ro.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=_o(),t=Nu.identifierPrefix;if(al){var n=Ya;t=":"+t+"R"+(n=(qa&~(1<<32-ot(qa)-1)).toString(32)+n),0<(n=wo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ko++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ui={readContext:xl,useCallback:qo,useContext:xl,useEffect:Wo,useImperativeHandle:Ko,useInsertionEffect:Ho,useLayoutEffect:Qo,useMemo:Yo,useReducer:No,useRef:Uo,useState:function(){return No(Po)},useDebugValue:Zo,useDeferredValue:function(e){return Xo(Lo(),vo.memoizedState,e)},useTransition:function(){return[No(Po)[0],Lo().memoizedState]},useMutableSource:To,useSyncExternalStore:Oo,useId:ei,unstable_isNewReconciler:!1},ci={readContext:xl,useCallback:qo,useContext:xl,useEffect:Wo,useImperativeHandle:Ko,useInsertionEffect:Ho,useLayoutEffect:Qo,useMemo:Yo,useReducer:zo,useRef:Uo,useState:function(){return zo(Po)},useDebugValue:Zo,useDeferredValue:function(e){var t=Lo();return null===vo?t.memoizedState=e:Xo(t,vo.memoizedState,e)},useTransition:function(){return[zo(Po)[0],Lo().memoizedState]},useMutableSource:To,useSyncExternalStore:Oo,useId:ei,unstable_isNewReconciler:!1};function si(e,t){try{var n="",r=t;do{n+=V(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function fi(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function hi(e,t,n){(n=Ml(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wu||(Wu=!0,Hu=r),di(0,t)},n}function mi(e,t,n){(n=Ml(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){di(0,t)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){di(0,t),"function"!=typeof r&&(null===Qu?Qu=new Set([this]):Qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function vi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=xc.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ml(-1,1)).tag=2,Rl(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var bi=w.ReactCurrentOwner,wi=!1;function ki(e,t,n,r){t.child=null===e?Yl(t,null,n,r):ql(t,e.child,n,r)}function Ei(e,t,n,r,a){n=n.render;var l=t.ref;return Cl(t,a),r=Co(e,t,n,r,l,a),n=xo(),null===e||wi?(al&&n&&el(t),t.flags|=1,ki(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Wi(e,t,a))}function Si(e,t,n,r,a){if(null===e){var l=n.type;return"function"!=typeof l||Oc(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Rc(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Ci(e,t,l,r,a))}if(l=e.child,0==(e.lanes&a)){var o=l.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)return Wi(e,t,a)}return t.flags|=1,(e=Mc(l,r)).ref=t.ref,e.return=t,t.child=e}function Ci(e,t,n,r,a){if(null!==e){var l=e.memoizedProps;if(ur(l,r)&&e.ref===t.ref){if(wi=!1,t.pendingProps=r=l,0==(e.lanes&a))return t.lanes=e.lanes,Wi(e,t,a);0!=(131072&e.flags)&&(wi=!0)}}return Li(e,t,n,r,a)}function xi(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_a(Mu,Ou),Ou|=n;else{if(0==(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_a(Mu,Ou),Ou|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==l?l.baseLanes:n,_a(Mu,Ou),Ou|=r}else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,_a(Mu,Ou),Ou|=r;return ki(e,t,a,n),t.child}function _i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Li(e,t,n,r,a){var l=Oa(n)?za:Pa.current;return l=Ta(t,l),Cl(t,a),n=Co(e,t,n,r,l,a),r=xo(),null===e||wi?(al&&r&&el(t),t.flags|=1,ki(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Wi(e,t,a))}function Pi(e,t,n,r,a){if(Oa(n)){var l=!0;Fa(t)}else l=!1;if(Cl(t,a),null===t.stateNode)$i(e,t),$l(t,n,r),Hl(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,c=n.contextType;"object"==typeof c&&null!==c?c=xl(c):c=Ta(t,c=Oa(n)?za:Pa.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==c)&&Wl(t,o,r,c),zl=!1;var d=t.memoizedState;o.state=d,Al(t,r,o,a),u=t.memoizedState,i!==r||d!==u||Na.current||zl?("function"==typeof s&&(Ul(t,n,s,r),u=t.memoizedState),(i=zl||Bl(t,n,i,r,d,u,c))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=c,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Ol(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:vl(t.type,i),o.props=c,f=t.pendingProps,d=o.context,"object"==typeof(u=n.contextType)&&null!==u?u=xl(u):u=Ta(t,u=Oa(n)?za:Pa.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&Wl(t,o,r,u),zl=!1,d=t.memoizedState,o.state=d,Al(t,r,o,a);var h=t.memoizedState;i!==f||d!==h||Na.current||zl?("function"==typeof p&&(Ul(t,n,p,r),h=t.memoizedState),(c=zl||Bl(t,n,c,r,d,h,u)||!1)?(s||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=u,r=c):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Ni(e,t,n,r,l,a)}function Ni(e,t,n,r,a,l){_i(e,t);var o=0!=(128&t.flags);if(!r&&!o)return a&&Aa(t,n,!1),Wi(e,t,l);r=t.stateNode,bi.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=ql(t,e.child,null,l),t.child=ql(t,null,i,l)):ki(e,t,i,l),t.memoizedState=r.state,a&&Aa(t,n,!0),t.child}function zi(e){var t=e.stateNode;t.pendingContext?Ra(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ra(0,t.context,!1),ro(e,t.containerInfo)}function Ti(e,t,n,r,a){return pl(),hl(a),t.flags|=256,ki(e,t,n,r),t.child}var Oi,Mi,Ri,Ii={dehydrated:null,treeContext:null,retryLane:0};function Fi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ai(e,t,n){var r,a=t.pendingProps,o=io.current,i=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),_a(io,1&o),null===e)return cl(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,i?(a=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Fc(u,a,0,null),e=Ic(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Fi(n),t.memoizedState=Ii,e):ji(t,u));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,i){if(n)return 256&t.flags?(t.flags&=-257,Di(e,t,i,r=fi(Error(l(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=Fc({mode:"visible",children:r.children},a,0,null),(o=Ic(o,a,i,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!=(1&t.mode)&&ql(t,e.child,null,i),t.child.memoizedState=Fi(i),t.memoizedState=Ii,o);if(0==(1&t.mode))return Di(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Di(e,t,i,r=fi(o=Error(l(419)),r,void 0))}if(u=0!=(i&e.childLanes),wi||u){if(null!==(r=Nu)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|i))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Nl(e,a),nc(r,e,a,-1))}return mc(),Di(e,t,i,r=fi(Error(l(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Lc.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,rl=ca(a.nextSibling),nl=t,al=!0,ll=null,null!==e&&(Ga[Ka++]=qa,Ga[Ka++]=Ya,Ga[Ka++]=Za,qa=e.id,Ya=e.overflow,Za=t),(t=ji(t,r.children)).flags|=4096,t)}(e,t,u,a,r,o,n);if(i){i=a.fallback,u=t.mode,r=(o=e.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=c,t.deletions=null):(a=Mc(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==r?i=Mc(r,i):(i=Ic(i,u,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,u=null===(u=e.child.memoizedState)?Fi(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Ii,a}return e=(i=e.child).sibling,a=Mc(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function ji(e,t){return(t=Fc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Di(e,t,n,r){return null!==r&&hl(r),ql(t,e.child,null,n),(e=ji(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ui(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Sl(e.return,t,n)}function Vi(e,t,n,r,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a)}function Bi(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(ki(e,t,r.children,n),0!=(2&(r=io.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ui(e,n,t);else if(19===e.tag)Ui(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_a(io,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===uo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Vi(t,!1,a,n,l);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===uo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Vi(t,!0,n,null,l);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function $i(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Wi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Mc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Mc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hi(e,t){if(!al)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Gi(e,t,n){var r=t.pendingProps;switch(tl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qi(t),null;case 1:case 17:return Oa(t.type)&&Ma(),Qi(t),null;case 3:return r=t.stateNode,ao(),xa(Na),xa(Pa),so(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fl(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ll&&(oc(ll),ll=null))),Qi(t),null;case 5:oo(t);var a=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Mi(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(l(166));return Qi(t),null}if(e=no(Jl.current),fl(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[da]=t,r[pa]=o,e=0!=(1&t.mode),n){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(a=0;a<Ir.length;a++)Dr(Ir[a],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":q(r,o),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Dr("invalid",r);break;case"textarea":ae(r,o),Dr("invalid",r)}for(var u in ye(n,o),a=null,o)if(o.hasOwnProperty(u)){var c=o[u];"children"===u?"string"==typeof c?r.textContent!==c&&(!0!==o.suppressHydrationWarning&&Xr(r.textContent,c,e),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Xr(r.textContent,c,e),a=["children",""+c]):i.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&Dr("scroll",r)}switch(n){case"input":Q(r),J(r,o,!0);break;case"textarea":Q(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[da]=t,e[pa]=r,Oi(e,t),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Dr("cancel",e),Dr("close",e),a=r;break;case"iframe":case"object":case"embed":Dr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Ir.length;a++)Dr(Ir[a],e);a=r;break;case"source":Dr("error",e),a=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),a=r;break;case"details":Dr("toggle",e),a=r;break;case"input":q(e,r),a=Z(e,r),Dr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=A({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Dr("invalid",e)}for(o in ye(n,a),c=a)if(c.hasOwnProperty(o)){var s=c[o];"style"===o?ve(e,s):"dangerouslySetInnerHTML"===o?null!=(s=s?s.__html:void 0)&&fe(e,s):"children"===o?"string"==typeof s?("textarea"!==n||""!==s)&&de(e,s):"number"==typeof s&&de(e,""+s):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=s&&"onScroll"===o&&Dr("scroll",e):null!=s&&b(e,o,s,u))}switch(n){case"input":Q(e),J(e,r,!1);break;case"textarea":Q(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Qi(t),null;case 6:if(e&&null!=t.stateNode)Ri(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));if(n=no(to.current),no(Jl.current),fl(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(o=r.nodeValue!==n)&&null!==(e=nl))switch(e.tag){case 3:Xr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,n,0!=(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return Qi(t),null;case 13:if(xa(io),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(al&&null!==rl&&0!=(1&t.mode)&&0==(128&t.flags))dl(),pl(),t.flags|=98560,o=!1;else if(o=fl(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(l(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(l(317));o[da]=t}else pl(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Qi(t),o=!1}else null!==ll&&(oc(ll),ll=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&io.current)?0===Ru&&(Ru=3):mc())),null!==t.updateQueue&&(t.flags|=4),Qi(t),null);case 4:return ao(),null===e&&Br(t.stateNode.containerInfo),Qi(t),null;case 10:return El(t.type._context),Qi(t),null;case 19:if(xa(io),null===(o=t.memoizedState))return Qi(t),null;if(r=0!=(128&t.flags),null===(u=o.rendering))if(r)Hi(o,!1);else{if(0!==Ru||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=uo(e))){for(t.flags|=128,Hi(o,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _a(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Ye()>Bu&&(t.flags|=128,r=!0,Hi(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=uo(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!u.alternate&&!al)return Qi(t),null}else 2*Ye()-o.renderingStartTime>Bu&&1073741824!==n&&(t.flags|=128,r=!0,Hi(o,!1),t.lanes=4194304);o.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=o.last)?n.sibling=u:t.child=u,o.last=u)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ye(),t.sibling=null,n=io.current,_a(io,r?1&n|2:1&n),t):(Qi(t),null);case 22:case 23:return fc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Ou)&&(Qi(t),6&t.subtreeFlags&&(t.flags|=8192)):Qi(t),null;case 24:case 25:return null}throw Error(l(156,t.tag))}function Ki(e,t){switch(tl(t),t.tag){case 1:return Oa(t.type)&&Ma(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ao(),xa(Na),xa(Pa),so(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(xa(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));pl()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xa(io),null;case 4:return ao(),null;case 10:return El(t.type._context),null;case 22:case 23:return fc(),null;default:return null}}Oi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Mi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,no(Jl.current);var l,o=null;switch(n){case"input":a=Z(e,a),r=Z(e,r),o=[];break;case"select":a=A({},a,{value:void 0}),r=A({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(s in ye(n,r),n=null,a)if(!r.hasOwnProperty(s)&&a.hasOwnProperty(s)&&null!=a[s])if("style"===s){var u=a[s];for(l in u)u.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?o||(o=[]):(o=o||[]).push(s,null));for(s in r){var c=r[s];if(u=null!=a?a[s]:void 0,r.hasOwnProperty(s)&&c!==u&&(null!=c||null!=u))if("style"===s)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(o||(o=[]),o.push(s,n)),n=c;else"dangerouslySetInnerHTML"===s?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(o=o||[]).push(s,c)):"children"===s?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(s,""+c):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(i.hasOwnProperty(s)?(null!=c&&"onScroll"===s&&Dr("scroll",e),o||u===c||(o=[])):(o=o||[]).push(s,c))}n&&(o=o||[]).push("style",n);var s=o;(t.updateQueue=s)&&(t.flags|=4)}},Ri=function(e,t,n,r){n!==r&&(t.flags|=4)};var Zi=!1,qi=!1,Yi="function"==typeof WeakSet?WeakSet:Set,Xi=null;function Ji(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cc(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){Cc(e,t,n)}}var tu=!1;function nu(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var l=a.destroy;a.destroy=void 0,void 0!==l&&eu(t,n,l)}a=a.next}while(a!==r)}}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function au(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function lu(e){var t=e.alternate;null!==t&&(e.alternate=null,lu(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[ma],delete t[va],delete t[ga])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ou(e){return 5===e.tag||3===e.tag||4===e.tag}function iu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ou(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var su=null,fu=!1;function du(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(lt&&"function"==typeof lt.onCommitFiberUnmount)try{lt.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:qi||Ji(n,t);case 6:var r=su,a=fu;su=null,du(e,t,n),fu=a,null!==(su=r)&&(fu?(e=su,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):su.removeChild(n.stateNode));break;case 18:null!==su&&(fu?(e=su,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Bt(e)):ua(su,n.stateNode));break;case 4:r=su,a=fu,su=n.stateNode.containerInfo,fu=!0,du(e,t,n),su=r,fu=a;break;case 0:case 11:case 14:case 15:if(!qi&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var l=a,o=l.destroy;l=l.tag,void 0!==o&&(0!=(2&l)||0!=(4&l))&&eu(n,t,o),a=a.next}while(a!==r)}du(e,t,n);break;case 1:if(!qi&&(Ji(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cc(n,t,e)}du(e,t,n);break;case 21:du(e,t,n);break;case 22:1&n.mode?(qi=(r=qi)||null!==n.memoizedState,du(e,t,n),qi=r):du(e,t,n);break;default:du(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Yi),t.forEach((function(t){var r=Pc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function mu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:su=u.stateNode,fu=!1;break e;case 3:case 4:su=u.stateNode.containerInfo,fu=!0;break e}u=u.return}if(null===su)throw Error(l(160));pu(o,i,a),su=null,fu=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){Cc(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)vu(t,e),t=t.sibling}function vu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),gu(e),4&r){try{nu(3,e,e.return),ru(3,e)}catch(t){Cc(e,e.return,t)}try{nu(5,e,e.return)}catch(t){Cc(e,e.return,t)}}break;case 1:mu(t,e),gu(e),512&r&&null!==n&&Ji(n,n.return);break;case 5:if(mu(t,e),gu(e),512&r&&null!==n&&Ji(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){Cc(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===o.type&&null!=o.name&&Y(a,o),be(u,i);var s=be(u,o);for(i=0;i<c.length;i+=2){var f=c[i],d=c[i+1];"style"===f?ve(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,s)}switch(u){case"input":X(a,o);break;case"textarea":le(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?ne(a,!!o.multiple,h,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[pa]=o}catch(t){Cc(e,e.return,t)}}break;case 6:if(mu(t,e),gu(e),4&r){if(null===e.stateNode)throw Error(l(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){Cc(e,e.return,t)}}break;case 3:if(mu(t,e),gu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Bt(t.containerInfo)}catch(t){Cc(e,e.return,t)}break;case 4:default:mu(t,e),gu(e);break;case 13:mu(t,e),gu(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Vu=Ye())),4&r&&hu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(qi=(s=qi)||f,mu(t,e),qi=s):mu(t,e),gu(e),8192&r){if(s=null!==e.memoizedState,(e.stateNode.isHidden=s)&&!f&&0!=(1&e.mode))for(Xi=e,f=e.child;null!==f;){for(d=Xi=f;null!==Xi;){switch(h=(p=Xi).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:Ji(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Cc(r,n,e)}}break;case 5:Ji(p,p.return);break;case 22:if(null!==p.memoizedState){ku(d);continue}}null!==h?(h.return=p,Xi=h):ku(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,s?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,i=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=me("display",i))}catch(t){Cc(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=s?"":d.memoizedProps}catch(t){Cc(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mu(t,e),gu(e),4&r&&hu(e);case 21:}}function gu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ou(n)){var r=n;break e}n=n.return}throw Error(l(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),cu(e,iu(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;uu(e,iu(e),o);break;default:throw Error(l(161))}}catch(t){Cc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yu(e,t,n){Xi=e,bu(e,t,n)}function bu(e,t,n){for(var r=0!=(1&e.mode);null!==Xi;){var a=Xi,l=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Zi;if(!o){var i=a.alternate,u=null!==i&&null!==i.memoizedState||qi;i=Zi;var c=qi;if(Zi=o,(qi=u)&&!c)for(Xi=a;null!==Xi;)u=(o=Xi).child,22===o.tag&&null!==o.memoizedState?Eu(a):null!==u?(u.return=o,Xi=u):Eu(a);for(;null!==l;)Xi=l,bu(l,t,n),l=l.sibling;Xi=a,Zi=i,qi=c}wu(e)}else 0!=(8772&a.subtreeFlags)&&null!==l?(l.return=a,Xi=l):wu(e)}}function wu(e){for(;null!==Xi;){var t=Xi;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:qi||ru(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!qi)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:vl(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&jl(t,o,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}jl(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var s=t.alternate;if(null!==s){var f=s.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Bt(d)}}}break;default:throw Error(l(163))}qi||512&t.flags&&au(t)}catch(e){Cc(t,t.return,e)}}if(t===e){Xi=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xi=n;break}Xi=t.return}}function ku(e){for(;null!==Xi;){var t=Xi;if(t===e){Xi=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xi=n;break}Xi=t.return}}function Eu(e){for(;null!==Xi;){var t=Xi;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ru(4,t)}catch(e){Cc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cc(t,a,e)}}var l=t.return;try{au(t)}catch(e){Cc(t,l,e)}break;case 5:var o=t.return;try{au(t)}catch(e){Cc(t,o,e)}}}catch(e){Cc(t,t.return,e)}if(t===e){Xi=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Xi=i;break}Xi=t.return}}var Su,Cu=Math.ceil,xu=w.ReactCurrentDispatcher,_u=w.ReactCurrentOwner,Lu=w.ReactCurrentBatchConfig,Pu=0,Nu=null,zu=null,Tu=0,Ou=0,Mu=Ca(0),Ru=0,Iu=null,Fu=0,Au=0,ju=0,Du=null,Uu=null,Vu=0,Bu=1/0,$u=null,Wu=!1,Hu=null,Qu=null,Gu=!1,Ku=null,Zu=0,qu=0,Yu=null,Xu=-1,Ju=0;function ec(){return 0!=(6&Pu)?Ye():-1!==Xu?Xu:Xu=Ye()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Pu)&&0!==Tu?Tu&-Tu:null!==ml.transition?(0===Ju&&(Ju=mt()),Ju):0!==(e=bt)?e:e=void 0===(e=window.event)?16:qt(e.type)}function nc(e,t,n,r){if(50<qu)throw qu=0,Yu=null,Error(l(185));gt(e,n,r),0!=(2&Pu)&&e===Nu||(e===Nu&&(0==(2&Pu)&&(Au|=n),4===Ru&&ic(e,Tu)),rc(e,r),1===n&&0===Pu&&0==(1&t.mode)&&(Bu=Ye()+500,Da&&Ba()))}function rc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var o=31-ot(l),i=1<<o,u=a[o];-1===u?0!=(i&n)&&0==(i&r)||(a[o]=pt(i,t)):u<=t&&(e.expiredLanes|=i),l&=~i}}(e,t);var r=dt(e,e===Nu?Tu:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Da=!0,Va(e)}(uc.bind(null,e)):Va(uc.bind(null,e)),oa((function(){0==(6&Pu)&&Ba()})),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Nc(n,ac.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ac(e,t){if(Xu=-1,Ju=0,0!=(6&Pu))throw Error(l(327));var n=e.callbackNode;if(Ec()&&e.callbackNode!==n)return null;var r=dt(e,e===Nu?Tu:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=vc(e,r);else{t=r;var a=Pu;Pu|=2;var o=hc();for(Nu===e&&Tu===t||($u=null,Bu=Ye()+500,dc(e,t));;)try{yc();break}catch(t){pc(e,t)}kl(),xu.current=o,Pu=a,null!==zu?t=0:(Nu=null,Tu=0,t=Ru)}if(0!==t){if(2===t&&(0!==(a=ht(e))&&(r=a,t=lc(e,a))),1===t)throw n=Iu,dc(e,0),ic(e,r),rc(e,Ye()),n;if(6===t)ic(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],l=a.getSnapshot;a=a.value;try{if(!ir(l(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=vc(e,r))&&(0!==(o=ht(e))&&(r=o,t=lc(e,o))),1===t))throw n=Iu,dc(e,0),ic(e,r),rc(e,Ye()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(l(345));case 2:case 5:kc(e,Uu,$u);break;case 3:if(ic(e,r),(130023424&r)===r&&10<(t=Vu+500-Ye())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(kc.bind(null,e,Uu,$u),t);break}kc(e,Uu,$u);break;case 4:if(ic(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-ot(r);o=1<<i,(i=t[i])>a&&(a=i),r&=~o}if(r=a,10<(r=(120>(r=Ye()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=ra(kc.bind(null,e,Uu,$u),r);break}kc(e,Uu,$u);break;default:throw Error(l(329))}}}return rc(e,Ye()),e.callbackNode===n?ac.bind(null,e):null}function lc(e,t){var n=Du;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=vc(e,t))&&(t=Uu,Uu=n,null!==t&&oc(t)),e}function oc(e){null===Uu?Uu=e:Uu.push.apply(Uu,e)}function ic(e,t){for(t&=~ju,t&=~Au,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function uc(e){if(0!=(6&Pu))throw Error(l(327));Ec();var t=dt(e,0);if(0==(1&t))return rc(e,Ye()),null;var n=vc(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=lc(e,r))}if(1===n)throw n=Iu,dc(e,0),ic(e,t),rc(e,Ye()),n;if(6===n)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kc(e,Uu,$u),rc(e,Ye()),null}function cc(e,t){var n=Pu;Pu|=1;try{return e(t)}finally{0===(Pu=n)&&(Bu=Ye()+500,Da&&Ba())}}function sc(e){null!==Ku&&0===Ku.tag&&0==(6&Pu)&&Ec();var t=Pu;Pu|=1;var n=Lu.transition,r=bt;try{if(Lu.transition=null,bt=1,e)return e()}finally{bt=r,Lu.transition=n,0==(6&(Pu=t))&&Ba()}}function fc(){Ou=Mu.current,xa(Mu)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==zu)for(n=zu.return;null!==n;){var r=n;switch(tl(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ma();break;case 3:ao(),xa(Na),xa(Pa),so();break;case 5:oo(r);break;case 4:ao();break;case 13:case 19:xa(io);break;case 10:El(r.type._context);break;case 22:case 23:fc()}n=n.return}if(Nu=e,zu=e=Mc(e.current,null),Tu=Ou=t,Ru=0,Iu=null,ju=Au=Fu=0,Uu=Du=null,null!==_l){for(t=0;t<_l.length;t++)if(null!==(r=(n=_l[t]).interleaved)){n.interleaved=null;var a=r.next,l=n.pending;if(null!==l){var o=l.next;l.next=a,r.next=o}n.pending=r}_l=null}return e}function pc(e,t){for(;;){var n=zu;try{if(kl(),fo.current=oi,yo){for(var r=mo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}yo=!1}if(ho=0,go=vo=mo=null,bo=!1,wo=0,_u.current=null,null===n||null===n.return){Ru=1,Iu=t,zu=null;break}e:{var o=e,i=n.return,u=n,c=t;if(t=Tu,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c,f=u,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=gi(i);if(null!==h){h.flags&=-257,yi(h,i,u,0,t),1&h.mode&&vi(o,s,t),c=s;var m=(t=h).updateQueue;if(null===m){var v=new Set;v.add(c),t.updateQueue=v}else m.add(c);break e}if(0==(1&t)){vi(o,s,t),mc();break e}c=Error(l(426))}else if(al&&1&u.mode){var g=gi(i);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),yi(g,i,u,0,t),hl(si(c,u));break e}}o=c=si(c,u),4!==Ru&&(Ru=2),null===Du?Du=[o]:Du.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,hi(0,c,t));break e;case 1:u=c;var y=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof y.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Qu||!Qu.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,mi(o,u,t));break e}}o=o.return}while(null!==o)}wc(n)}catch(e){t=e,zu===n&&null!==n&&(zu=n=n.return);continue}break}}function hc(){var e=xu.current;return xu.current=oi,null===e?oi:e}function mc(){0!==Ru&&3!==Ru&&2!==Ru||(Ru=4),null===Nu||0==(268435455&Fu)&&0==(268435455&Au)||ic(Nu,Tu)}function vc(e,t){var n=Pu;Pu|=2;var r=hc();for(Nu===e&&Tu===t||($u=null,dc(e,t));;)try{gc();break}catch(t){pc(e,t)}if(kl(),Pu=n,xu.current=r,null!==zu)throw Error(l(261));return Nu=null,Tu=0,Ru}function gc(){for(;null!==zu;)bc(zu)}function yc(){for(;null!==zu&&!Ze();)bc(zu)}function bc(e){var t=Su(e.alternate,e,Ou);e.memoizedProps=e.pendingProps,null===t?wc(e):zu=t,_u.current=null}function wc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Gi(n,t,Ou)))return void(zu=n)}else{if(null!==(n=Ki(n,t)))return n.flags&=32767,void(zu=n);if(null===e)return Ru=6,void(zu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(zu=t);zu=t=e}while(null!==t);0===Ru&&(Ru=5)}function kc(e,t,n){var r=bt,a=Lu.transition;try{Lu.transition=null,bt=1,function(e,t,n,r){do{Ec()}while(null!==Ku);if(0!=(6&Pu))throw Error(l(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),l=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~l}}(e,o),e===Nu&&(zu=Nu=null,Tu=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Gu||(Gu=!0,Nc(tt,(function(){return Ec(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=Lu.transition,Lu.transition=null;var i=bt;bt=1;var u=Pu;Pu|=4,_u.current=null,function(e,t){if(ea=Wt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var i=0,u=-1,c=-1,s=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==a&&3!==d.nodeType||(u=i+a),d!==o||0!==r&&3!==d.nodeType||(c=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++s===a&&(u=i),p===o&&++f===r&&(c=i),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Wt=!1,Xi=t;null!==Xi;)if(e=(t=Xi).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Xi=e;else for(;null!==Xi;){t=Xi;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var v=m.memoizedProps,g=m.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?v:vl(t.type,v),g);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(l(163))}}catch(e){Cc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Xi=e;break}Xi=t.return}m=tu,tu=!1}(e,n),vu(n,e),hr(ta),Wt=!!ea,ta=ea=null,e.current=n,yu(n,e,a),qe(),Pu=u,bt=i,Lu.transition=o}else e.current=n;if(Gu&&(Gu=!1,Ku=e,Zu=a),0===(o=e.pendingLanes)&&(Qu=null),function(e){if(lt&&"function"==typeof lt.onCommitFiberRoot)try{lt.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),rc(e,Ye()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],r(a.value,{componentStack:a.stack,digest:a.digest});if(Wu)throw Wu=!1,e=Hu,Hu=null,e;0!=(1&Zu)&&0!==e.tag&&Ec(),0!=(1&(o=e.pendingLanes))?e===Yu?qu++:(qu=0,Yu=e):qu=0,Ba()}(e,t,n,r)}finally{Lu.transition=a,bt=r}return null}function Ec(){if(null!==Ku){var e=wt(Zu),t=Lu.transition,n=bt;try{if(Lu.transition=null,bt=16>e?16:e,null===Ku)var r=!1;else{if(e=Ku,Ku=null,Zu=0,0!=(6&Pu))throw Error(l(331));var a=Pu;for(Pu|=4,Xi=e.current;null!==Xi;){var o=Xi,i=o.child;if(0!=(16&Xi.flags)){var u=o.deletions;if(null!==u){for(var c=0;c<u.length;c++){var s=u[c];for(Xi=s;null!==Xi;){var f=Xi;switch(f.tag){case 0:case 11:case 15:nu(8,f,o)}var d=f.child;if(null!==d)d.return=f,Xi=d;else for(;null!==Xi;){var p=(f=Xi).sibling,h=f.return;if(lu(f),f===s){Xi=null;break}if(null!==p){p.return=h,Xi=p;break}Xi=h}}}var m=o.alternate;if(null!==m){var v=m.child;if(null!==v){m.child=null;do{var g=v.sibling;v.sibling=null,v=g}while(null!==v)}}Xi=o}}if(0!=(2064&o.subtreeFlags)&&null!==i)i.return=o,Xi=i;else e:for(;null!==Xi;){if(0!=(2048&(o=Xi).flags))switch(o.tag){case 0:case 11:case 15:nu(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Xi=y;break e}Xi=o.return}}var b=e.current;for(Xi=b;null!==Xi;){var w=(i=Xi).child;if(0!=(2064&i.subtreeFlags)&&null!==w)w.return=i,Xi=w;else e:for(i=b;null!==Xi;){if(0!=(2048&(u=Xi).flags))try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){Cc(u,u.return,e)}if(u===i){Xi=null;break e}var k=u.sibling;if(null!==k){k.return=u.return,Xi=k;break e}Xi=u.return}}if(Pu=a,Ba(),lt&&"function"==typeof lt.onPostCommitFiberRoot)try{lt.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,Lu.transition=t}}return!1}function Sc(e,t,n){e=Rl(e,t=hi(0,t=si(n,t),1),1),t=ec(),null!==e&&(gt(e,1,t),rc(e,t))}function Cc(e,t,n){if(3===e.tag)Sc(e,e,n);else for(;null!==t;){if(3===t.tag){Sc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qu||!Qu.has(r))){t=Rl(t,e=mi(t,e=si(n,e),1),1),e=ec(),null!==t&&(gt(t,1,e),rc(t,e));break}}t=t.return}}function xc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Nu===e&&(Tu&n)===n&&(4===Ru||3===Ru&&(130023424&Tu)===Tu&&500>Ye()-Vu?dc(e,0):ju|=n),rc(e,t)}function _c(e,t){0===t&&(0==(1&e.mode)?t=1:(t=st,0==(130023424&(st<<=1))&&(st=4194304)));var n=ec();null!==(e=Nl(e,t))&&(gt(e,t,n),rc(e,n))}function Lc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),_c(e,n)}function Pc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(l(314))}null!==r&&r.delete(t),_c(e,n)}function Nc(e,t){return Ge(e,t)}function zc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Tc(e,t,n,r){return new zc(e,t,n,r)}function Oc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Mc(e,t){var n=e.alternate;return null===n?((n=Tc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Rc(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Oc(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case S:return Ic(n.children,a,o,t);case C:i=8,a|=8;break;case x:return(e=Tc(12,n,t,2|a)).elementType=x,e.lanes=o,e;case N:return(e=Tc(13,n,t,a)).elementType=N,e.lanes=o,e;case z:return(e=Tc(19,n,t,a)).elementType=z,e.lanes=o,e;case M:return Fc(n,a,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:i=10;break e;case L:i=9;break e;case P:i=11;break e;case T:i=14;break e;case O:i=16,r=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Tc(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Ic(e,t,n,r){return(e=Tc(7,e,r,t)).lanes=n,e}function Fc(e,t,n,r){return(e=Tc(22,e,r,t)).elementType=M,e.lanes=n,e.stateNode={isHidden:!1},e}function Ac(e,t,n){return(e=Tc(6,e,null,t)).lanes=n,e}function jc(e,t,n){return(t=Tc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Dc(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=vt(0),this.expirationTimes=vt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=vt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Uc(e,t,n,r,a,l,o,i,u){return e=new Dc(e,t,n,i,u),1===t?(t=1,!0===l&&(t|=8)):t=0,l=Tc(3,null,null,t),e.current=l,l.stateNode=e,l.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Tl(l),e}function Vc(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Bc(e){if(!e)return La;e:{if(Be(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Oa(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(l(171))}if(1===e.tag){var n=e.type;if(Oa(n))return Ia(e,n,t)}return t}function $c(e,t,n,r,a,l,o,i,u){return(e=Uc(n,r,!0,e,0,l,0,i,u)).context=Bc(null),n=e.current,(l=Ml(r=ec(),a=tc(n))).callback=null!=t?t:null,Rl(n,l,a),e.current.lanes=a,gt(e,a,r),rc(e,r),e}function Wc(e,t,n,r){var a=t.current,l=ec(),o=tc(a);return n=Bc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ml(l,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Rl(a,t,o))&&(nc(e,a,o,l),Il(e,a,o)),o}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Gc(e,t){Qc(e,t),(e=e.alternate)&&Qc(e,t)}Su=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Na.current)wi=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wi=!1,function(e,t,n){switch(t.tag){case 3:zi(t),pl();break;case 5:lo(t);break;case 1:Oa(t.type)&&Fa(t);break;case 4:ro(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;_a(gl,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_a(io,1&io.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Ai(e,t,n):(_a(io,1&io.current),null!==(e=Wi(e,t,n))?e.sibling:null);_a(io,1&io.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Bi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),_a(io,io.current),r)break;return null;case 22:case 23:return t.lanes=0,xi(e,t,n)}return Wi(e,t,n)}(e,t,n);wi=0!=(131072&e.flags)}else wi=!1,al&&0!=(1048576&t.flags)&&Ja(t,Qa,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;$i(e,t),e=t.pendingProps;var a=Ta(t,Pa.current);Cl(t,n),a=Co(null,t,r,e,a,n);var o=xo();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Oa(r)?(o=!0,Fa(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Tl(t),a.updater=Vl,t.stateNode=a,a._reactInternals=t,Hl(t,r,e,n),t=Ni(null,t,r,!0,o,n)):(t.tag=0,al&&o&&el(t),ki(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch($i(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Oc(e)?1:0;if(null!=e){if((e=e.$$typeof)===P)return 11;if(e===T)return 14}return 2}(r),e=vl(r,e),a){case 0:t=Li(null,t,r,e,n);break e;case 1:t=Pi(null,t,r,e,n);break e;case 11:t=Ei(null,t,r,e,n);break e;case 14:t=Si(null,t,r,vl(r.type,e),n);break e}throw Error(l(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Li(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 1:return r=t.type,a=t.pendingProps,Pi(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 3:e:{if(zi(t),null===e)throw Error(l(387));r=t.pendingProps,a=(o=t.memoizedState).element,Ol(e,t),Al(t,r,null,n);var i=t.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ti(e,t,r,n,a=si(Error(l(423)),t));break e}if(r!==a){t=Ti(e,t,r,n,a=si(Error(l(424)),t));break e}for(rl=ca(t.stateNode.containerInfo.firstChild),nl=t,al=!0,ll=null,n=Yl(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pl(),r===a){t=Wi(e,t,n);break e}ki(e,t,r,n)}t=t.child}return t;case 5:return lo(t),null===e&&cl(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,na(r,a)?i=null:null!==o&&na(r,o)&&(t.flags|=32),_i(e,t),ki(e,t,i,n),t.child;case 6:return null===e&&cl(t),null;case 13:return Ai(e,t,n);case 4:return ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ql(t,null,r,n):ki(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ei(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 7:return ki(e,t,t.pendingProps,n),t.child;case 8:case 12:return ki(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,_a(gl,r._currentValue),r._currentValue=i,null!==o)if(ir(o.value,i)){if(o.children===a.children&&!Na.current){t=Wi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var c=u.firstContext;null!==c;){if(c.context===r){if(1===o.tag){(c=Ml(-1,n&-n)).tag=2;var s=o.updateQueue;if(null!==s){var f=(s=s.shared).pending;null===f?c.next=c:(c.next=f.next,f.next=c),s.pending=c}}o.lanes|=n,null!==(c=o.alternate)&&(c.lanes|=n),Sl(o.return,n,t),u.lanes|=n;break}c=c.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(l(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Sl(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}ki(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Cl(t,n),r=r(a=xl(a)),t.flags|=1,ki(e,t,r,n),t.child;case 14:return a=vl(r=t.type,t.pendingProps),Si(e,t,r,a=vl(r.type,a),n);case 15:return Ci(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:vl(r,a),$i(e,t),t.tag=1,Oa(r)?(e=!0,Fa(t)):e=!1,Cl(t,n),$l(t,r,a),Hl(t,r,a,n),Ni(null,t,r,!0,e,n);case 19:return Bi(e,t,n);case 22:return xi(e,t,n)}throw Error(l(156,t.tag))};var Kc="function"==typeof reportError?reportError:function(e){console.error(e)};function Zc(e){this._internalRoot=e}function qc(e){this._internalRoot=e}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function es(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l;if("function"==typeof a){var i=a;a=function(){var e=Hc(o);i.call(e)}}Wc(t,o,e,a)}else o=function(e,t,n,r,a){if(a){if("function"==typeof r){var l=r;r=function(){var e=Hc(o);l.call(e)}}var o=$c(t,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=o,e[ha]=o.current,Br(8===e.nodeType?e.parentNode:e),sc(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=Hc(u);i.call(e)}}var u=Uc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=u,e[ha]=u.current,Br(8===e.nodeType?e.parentNode:e),sc((function(){Wc(t,u,n,r)})),u}(n,t,e,a,r);return Hc(o)}qc.prototype.render=Zc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(l(409));Wc(e,t,null,null)},qc.prototype.unmount=Zc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;sc((function(){Wc(null,e,null,null)})),t[ha]=null}},qc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Mt.length&&0!==t&&t<Mt[n].priority;n++);Mt.splice(n,0,e),0===n&&At(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(yt(t,1|n),rc(t,Ye()),0==(6&Pu)&&(Bu=Ye()+500,Ba()))}break;case 13:sc((function(){var t=Nl(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),Gc(e,1)}},Et=function(e){if(13===e.tag){var t=Nl(e,134217728);if(null!==t)nc(t,e,134217728,ec());Gc(e,134217728)}},St=function(e){if(13===e.tag){var t=tc(e),n=Nl(e,t);if(null!==n)nc(n,e,t,ec());Gc(e,t)}},Ct=function(){return bt},xt=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Ee=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ka(r);if(!a)throw Error(l(90));G(r),X(r,a)}}}break;case"textarea":le(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Pe=cc,Ne=sc;var ts={usingClientEntryPoint:!1,Events:[ba,wa,ka,_e,Le,cc]},ns={findFiberByHostInstance:ya,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rs={bundleType:ns.bundleType,version:ns.version,rendererPackageName:ns.rendererPackageName,rendererConfig:ns.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:ns.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var as=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!as.isDisabled&&as.supportsFiber)try{at=as.inject(rs),lt=as}catch(se){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ts,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yc(t))throw Error(l(200));return Vc(e,t,null,n)},t.createRoot=function(e,t){if(!Yc(e))throw Error(l(299));var n=!1,r="",a=Kc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Uc(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,Br(8===e.nodeType?e.parentNode:e),new Zc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return sc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(l(200));return es(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Yc(e))throw Error(l(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",i=Kc;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=$c(t,null,e,1,null!=n?n:null,a,0,o,i),e[ha]=t.current,Br(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new qc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(l(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(l(40));return!!e._reactRootContainer&&(sc((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xc(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return es(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.s=r.createRoot,r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),s=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,v={};function g(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var w=b.prototype=new y;w.constructor=b,m(w,g.prototype),w.isPureReactComponent=!0;var k=Array.isArray,E=Object.prototype.hasOwnProperty,S={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var a,l={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)E.call(t,a)&&!C.hasOwnProperty(a)&&(l[a]=t[a]);var u=arguments.length-2;if(1===u)l.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];l.children=c}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===l[a]&&(l[a]=u[a]);return{$$typeof:n,type:e,key:o,ref:i,props:l,_owner:S.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var L=/\/+/g;function P(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,a,l,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return o=o(u=e),e=""===l?"."+P(u,0):l,k(o)?(a="",null!=e&&(a=e.replace(L,"$&/")+"/"),N(o,t,a,"",(function(e){return e}))):null!=o&&(_(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(L,"$&/")+"/")+e)),t.push(o)),1;if(u=0,l=""===l?".":l+":",k(e))for(var c=0;c<e.length;c++){var s=l+P(i=e[c],c);u+=N(i,t,a,s,o)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(i=e.next()).done;)u+=N(i=i.value,t,a,s=l+P(i,c++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function z(e,t,n){if(null==e)return e;var r=[],a=0;return N(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function T(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var O={current:null},M={transition:null},R={ReactCurrentDispatcher:O,ReactCurrentBatchConfig:M,ReactCurrentOwner:S};t.Children={map:z,forEach:function(e,t,n){z(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return z(e,(function(){t++})),t},toArray:function(e){return z(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=a,t.Profiler=o,t.PureComponent=b,t.StrictMode=l,t.Suspense=s,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),l=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)E.call(t,c)&&!C.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){u=Array(c);for(var s=0;s<c;s++)u[s]=arguments[s+2];a.children=u}return{$$typeof:n,type:e.type,key:l,ref:o,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=M.transition;M.transition={};try{e()}finally{M.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return O.current.useCallback(e,t)},t.useContext=function(e){return O.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return O.current.useDeferredValue(e)},t.useEffect=function(e,t){return O.current.useEffect(e,t)},t.useId=function(){return O.current.useId()},t.useImperativeHandle=function(e,t,n){return O.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return O.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return O.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return O.current.useMemo(e,t)},t.useReducer=function(e,t,n){return O.current.useReducer(e,t,n)},t.useRef=function(e){return O.current.useRef(e)},t.useState=function(e){return O.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return O.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return O.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<l(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,u=e[i],c=i+1,s=e[c];if(0>l(u,n))c<a&&0>l(s,u)?(e[r]=s,e[c]=n,r=c):(e[r]=u,e[i]=n,r=i);else{if(!(c<a&&0>l(s,n)))break e;e[r]=s,e[c]=n,r=c}}}return t}function l(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var c=[],s=[],f=1,d=null,p=3,h=!1,m=!1,v=!1,g="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(s);null!==t;){if(null===t.callback)a(s);else{if(!(t.startTime<=e))break;a(s),t.sortIndex=t.expirationTime,n(c,t)}t=r(s)}}function k(e){if(v=!1,w(e),!m)if(null!==r(c))m=!0,M(E);else{var t=r(s);null!==t&&R(k,t.startTime-e)}}function E(e,n){m=!1,v&&(v=!1,y(_),_=-1),h=!0;var l=p;try{for(w(n),d=r(c);null!==d&&(!(d.expirationTime>n)||e&&!N());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?d.callback=i:d===r(c)&&a(c),w(n)}else a(c);d=r(c)}if(null!==d)var u=!0;else{var f=r(s);null!==f&&R(k,f.startTime-n),u=!1}return u}finally{d=null,p=l,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,C=!1,x=null,_=-1,L=5,P=-1;function N(){return!(t.unstable_now()-P<L)}function z(){if(null!==x){var e=t.unstable_now();P=e;var n=!0;try{n=x(!0,e)}finally{n?S():(C=!1,x=null)}}else C=!1}if("function"==typeof b)S=function(){b(z)};else if("undefined"!=typeof MessageChannel){var T=new MessageChannel,O=T.port2;T.port1.onmessage=z,S=function(){O.postMessage(null)}}else S=function(){g(z,0)};function M(e){x=e,C||(C=!0,S())}function R(e,n){_=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||h||(m=!0,M(E))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):L=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,l){var o=t.unstable_now();switch("object"==typeof l&&null!==l?l="number"==typeof(l=l.delay)&&0<l?o+l:o:l=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:l,expirationTime:i=l+i,sortIndex:-1},l>o?(e.sortIndex=l,n(s,e),null===r(c)&&e===r(s)&&(v?(y(_),_=-1):v=!0,R(k,l-o))):(e.sortIndex=i,n(c,e),m||h||(m=!0,M(E))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var l=r[e]={exports:{}};return n[e](l,l.exports,a),l.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var l=Object.create(null);a.r(l);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&n;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>n[e]));return o.default=()=>n,a.d(l,o),l},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e,t=a(294),n=a.t(t,2),r=a(745);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));const o="popstate";function i(e){return{usr:e.state,key:e.key}}function u(e,t,n,r){return void 0===n&&(n=null),l({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?s(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function c(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(t+="#"===r.charAt(0)?r:"#"+r),t}function s(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function f(t,n,r,a){void 0===a&&(a={});let{window:l=document.defaultView,v5Compat:c=!1}=a,s=l.history,f=e.Pop,d=null;function p(){f=e.Pop,d&&d({action:f,location:h.location})}let h={get action(){return f},get location(){return t(l,s)},listen(e){if(d)throw new Error("A history only accepts one active listener");return l.addEventListener(o,p),d=e,()=>{l.removeEventListener(o,p),d=null}},createHref:e=>n(l,e),push:function(t,n){f=e.Push;let a=u(h.location,t,n);r&&r(a,t);let o=i(a),p=h.createHref(a);try{s.pushState(o,"",p)}catch(e){l.location.assign(p)}c&&d&&d({action:f,location:a})},replace:function(t,n){f=e.Replace;let a=u(h.location,t,n);r&&r(a,t);let l=i(a),o=h.createHref(a);s.replaceState(l,"",o),c&&d&&d({action:f,location:a})},go:e=>s.go(e)};return h}var d;function p(e,t,n){void 0===n&&(n="/");let r=w(("string"==typeof t?s(t):t).pathname||"/",n);if(null==r)return null;let a=h(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let l=null;for(let e=0;null==l&&e<a.length;++e)l=y(a[e],r);return l}function h(e,t,n,r){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r=""),e.forEach(((e,a)=>{let l={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};l.relativePath.startsWith("/")&&(k(l.relativePath.startsWith(r),'Absolute route path "'+l.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),l.relativePath=l.relativePath.slice(r.length));let o=x([r,l.relativePath]),i=n.concat(l);e.children&&e.children.length>0&&(k(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+o+'".'),h(e.children,t,i,o)),(null!=e.path||e.index)&&t.push({path:o,score:g(o,e.index),routesMeta:i})})),t}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(d||(d={}));const m=/^:\w+$/,v=e=>"*"===e;function g(e,t){let n=e.split("/"),r=n.length;return n.some(v)&&(r+=-2),t&&(r+=2),n.filter((e=>!v(e))).reduce(((e,t)=>e+(m.test(t)?3:""===t?1:10)),r)}function y(e,t){let{routesMeta:n}=e,r={},a="/",l=[];for(let e=0;e<n.length;++e){let o=n[e],i=e===n.length-1,u="/"===a?t:t.slice(a.length)||"/",c=b({path:o.relativePath,caseSensitive:o.caseSensitive,end:i},u);if(!c)return null;Object.assign(r,c.params);let s=o.route;l.push({params:r,pathname:x([a,c.pathname]),pathnameBase:_(x([a,c.pathnameBase])),route:s}),"/"!==c.pathnameBase&&(a=x([a,c.pathnameBase]))}return l}function b(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);E("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(r.push(t),"([^\\/]+)")));e.endsWith("*")?(r.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))");return[new RegExp(a,t?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),a=t.match(n);if(!a)return null;let l=a[0],o=l.replace(/(.)\/+$/,"$1"),i=a.slice(1);return{params:r.reduce(((e,t,n)=>{if("*"===t){let e=i[n]||"";o=l.slice(0,l.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return E(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(i[n]||"",t),e}),{}),pathname:l,pathnameBase:o,pattern:e}}function w(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&"/"!==r?null:e.slice(n)||"/"}function k(e,t){if(!1===e||null==e)throw new Error(t)}function E(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function S(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function C(e,t,n,r){let a;void 0===r&&(r=!1),"string"==typeof e?a=s(e):(a=l({},e),k(!a.pathname||!a.pathname.includes("?"),S("?","pathname","search",a)),k(!a.pathname||!a.pathname.includes("#"),S("#","pathname","hash",a)),k(!a.search||!a.search.includes("#"),S("#","search","hash",a)));let o,i=""===e||""===a.pathname,u=i?"/":a.pathname;if(r||null==u)o=n;else{let e=t.length-1;if(u.startsWith("..")){let t=u.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}o=e>=0?t[e]:"/"}let c=function(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:a=""}="string"==typeof e?s(e):e,l=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:l,search:L(r),hash:P(a)}}(a,o),f=u&&"/"!==u&&u.endsWith("/"),d=(i||"."===u)&&n.endsWith("/");return c.pathname.endsWith("/")||!f&&!d||(c.pathname+="/"),c}const x=e=>e.join("/").replace(/\/\/+/g,"/"),_=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),L=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",P=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";class N extends Error{}class z{constructor(e,t,n){this.status=e,this.statusText=t||"",this.data=n}}function T(e){return e instanceof z}function O(){return O=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},O.apply(this,arguments)}const M="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},{useState:R,useEffect:I,useLayoutEffect:F,useDebugValue:A}=n;function j(e){const t=e.getSnapshot,n=e.value;try{const e=t();return!M(n,e)}catch(e){return!0}}"undefined"==typeof window||void 0===window.document||window.document.createElement,n.useSyncExternalStore;const D=t.createContext(null);const U=t.createContext(null);const V=t.createContext(null);const B=t.createContext(null);const $=t.createContext(null);const W=t.createContext({outlet:null,matches:[]});const H=t.createContext(null);function Q(){return null!=t.useContext($)}function G(){return Q()||k(!1),t.useContext($).location}function K(e){return e.filter(((t,n)=>0===n||!t.route.index&&t.pathnameBase!==e[n-1].pathnameBase))}function Z(){Q()||k(!1);let{basename:e,navigator:n}=t.useContext(B),{matches:r}=t.useContext(W),{pathname:a}=G(),l=JSON.stringify(K(r).map((e=>e.pathnameBase))),o=t.useRef(!1);return t.useEffect((()=>{o.current=!0})),t.useCallback((function(t,r){if(void 0===r&&(r={}),!o.current)return;if("number"==typeof t)return void n.go(t);let i=C(t,JSON.parse(l),a,"path"===r.relative);"/"!==e&&(i.pathname="/"===i.pathname?e:x([e,i.pathname])),(r.replace?n.replace:n.push)(i,r.state,r)}),[e,n,l,a])}function q(e,n){let{relative:r}=void 0===n?{}:n,{matches:a}=t.useContext(W),{pathname:l}=G(),o=JSON.stringify(K(a).map((e=>e.pathnameBase)));return t.useMemo((()=>C(e,JSON.parse(o),l,"path"===r)),[e,o,l,r])}function Y(){let e=function(){var e;let n=t.useContext(H),r=re(ne.UseRouteError),a=t.useContext(W),l=a.matches[a.matches.length-1];if(n)return n;return a||k(!1),!l.route.id&&k(!1),null==(e=r.errors)?void 0:e[l.route.id]}(),n=T(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),r=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",l={padding:"0.5rem",backgroundColor:a},o={padding:"2px 4px",backgroundColor:a};return t.createElement(t.Fragment,null,t.createElement("h2",null,"Unhandled Thrown Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},n),r?t.createElement("pre",{style:l},r):null,t.createElement("p",null,"💿 Hey developer 👋"),t.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",t.createElement("code",{style:o},"errorElement")," props on ",t.createElement("code",{style:o},"<Route>")))}class X extends t.Component{constructor(e){super(e),this.state={location:e.location,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location?{error:e.error,location:e.location}:{error:e.error||t.error,location:t.location}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?t.createElement(H.Provider,{value:this.state.error,children:this.props.component}):this.props.children}}function J(e){let{routeContext:n,match:r,children:a}=e,l=t.useContext(D);return l&&r.route.errorElement&&(l._deepestRenderedBoundaryId=r.route.id),t.createElement(W.Provider,{value:n},a)}function ee(e,n,r){if(void 0===n&&(n=[]),null==e){if(null==r||!r.errors)return null;e=r.matches}let a=e,l=null==r?void 0:r.errors;if(null!=l){let e=a.findIndex((e=>e.route.id&&(null==l?void 0:l[e.route.id])));e>=0||k(!1),a=a.slice(0,Math.min(a.length,e+1))}return a.reduceRight(((e,o,i)=>{let u=o.route.id?null==l?void 0:l[o.route.id]:null,c=r?o.route.errorElement||t.createElement(Y,null):null,s=()=>t.createElement(J,{match:o,routeContext:{outlet:e,matches:n.concat(a.slice(0,i+1))}},u?c:void 0!==o.route.element?o.route.element:e);return r&&(o.route.errorElement||0===i)?t.createElement(X,{location:r.location,component:c,error:u,children:s()}):s()}),null)}var te,ne;function re(e){let n=t.useContext(V);return n||k(!1),n}!function(e){e.UseRevalidator="useRevalidator"}(te||(te={})),function(e){e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator"}(ne||(ne={}));function ae(e){k(!1)}function le(n){let{basename:r="/",children:a=null,location:l,navigationType:o=e.Pop,navigator:i,static:u=!1}=n;Q()&&k(!1);let c=r.replace(/^\/*/,"/"),f=t.useMemo((()=>({basename:c,navigator:i,static:u})),[c,i,u]);"string"==typeof l&&(l=s(l));let{pathname:d="/",search:p="",hash:h="",state:m=null,key:v="default"}=l,g=t.useMemo((()=>{let e=w(d,c);return null==e?null:{pathname:e,search:p,hash:h,state:m,key:v}}),[c,d,p,h,m,v]);return null==g?null:t.createElement(B.Provider,{value:f},t.createElement($.Provider,{children:a,value:{location:g,navigationType:o}}))}function oe(n){let{children:r,location:a}=n,l=t.useContext(U);return function(n,r){Q()||k(!1);let a=t.useContext(V),{matches:l}=t.useContext(W),o=l[l.length-1],i=o?o.params:{},u=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let c,f=G();if(r){var d;let e="string"==typeof r?s(r):r;"/"===u||(null==(d=e.pathname)?void 0:d.startsWith(u))||k(!1),c=e}else c=f;let h=c.pathname||"/",m=p(n,{pathname:"/"===u?h:h.slice(u.length)||"/"}),v=ee(m&&m.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:x([u,e.pathname]),pathnameBase:"/"===e.pathnameBase?u:x([u,e.pathnameBase])}))),l,a||void 0);return r?t.createElement($.Provider,{value:{location:O({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:e.Pop}},v):v}(l&&!r?l.router.routes:ce(r),a)}var ie;!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(ie||(ie={}));new Promise((()=>{}));class ue extends t.Component{constructor(e){super(e),this.state={error:null}}static getDerivedStateFromError(e){return{error:e}}componentDidCatch(e,t){console.error("<Await> caught the following error during render",e,t)}render(){let{children:e,errorElement:t,resolve:n}=this.props,r=null,a=ie.pending;if(n instanceof Promise)if(this.state.error){ie.error;let e=this.state.error;Promise.reject().catch((()=>{})),Object.defineProperty(r,"_tracked",{get:()=>!0}),Object.defineProperty(r,"_error",{get:()=>e})}else n._tracked?(n,void 0!==r._error?ie.error:void 0!==r._data?ie.success:ie.pending):(ie.pending,Object.defineProperty(n,"_tracked",{get:()=>!0}),n.then((e=>Object.defineProperty(n,"_data",{get:()=>e})),(e=>Object.defineProperty(n,"_error",{get:()=>e}))));else ie.success,Promise.resolve(),Object.defineProperty(r,"_tracked",{get:()=>!0}),Object.defineProperty(r,"_data",{get:()=>n});if(a===ie.error&&r._error instanceof AbortedDeferredError)throw neverSettledPromise;if(a===ie.error&&!t)throw r._error;if(a===ie.error)return React.createElement(AwaitContext.Provider,{value:r,children:t});if(a===ie.success)return React.createElement(AwaitContext.Provider,{value:r,children:e});throw r}}function ce(e,n){void 0===n&&(n=[]);let r=[];return t.Children.forEach(e,((e,a)=>{if(!t.isValidElement(e))return;if(e.type===t.Fragment)return void r.push.apply(r,ce(e.props.children,n));e.type!==ae&&k(!1),e.props.index&&e.props.children&&k(!1);let l=[...n,a],o={id:e.props.id||l.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,hasErrorBoundary:null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle};e.props.children&&(o.children=ce(e.props.children,l)),r.push(o)})),r}function se(){return se=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},se.apply(this,arguments)}function fe(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}const de=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset"];function pe(e){let{basename:n,children:r,window:a}=e,l=t.useRef();var o;null==l.current&&(l.current=(void 0===(o={window:a,v5Compat:!0})&&(o={}),f((function(e,t){let{pathname:n,search:r,hash:a}=e.location;return u("",{pathname:n,search:r,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"==typeof t?t:c(t)}),null,o)));let i=l.current,[s,d]=t.useState({action:i.action,location:i.location});return t.useLayoutEffect((()=>i.listen(d)),[i]),t.createElement(le,{basename:n,children:r,location:s.location,navigationType:s.action,navigator:i})}const he=t.forwardRef((function(e,n){let{onClick:r,relative:a,reloadDocument:l,replace:o,state:i,target:u,to:s,preventScrollReset:f}=e,d=fe(e,de),p=function(e,n){let{relative:r}=void 0===n?{}:n;Q()||k(!1);let{basename:a,navigator:l}=t.useContext(B),{hash:o,pathname:i,search:u}=q(e,{relative:r}),c=i;return"/"!==a&&(c="/"===i?a:x([a,i])),l.createHref({pathname:c,search:u,hash:o})}(s,{relative:a}),h=function(e,n){let{target:r,replace:a,state:l,preventScrollReset:o,relative:i}=void 0===n?{}:n,u=Z(),s=G(),f=q(e,{relative:i});return t.useCallback((t=>{if(function(e,t){return!(0!==e.button||t&&"_self"!==t||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))}(t,r)){t.preventDefault();let n=void 0!==a?a:c(s)===c(f);u(e,{replace:n,state:l,preventScrollReset:o,relative:i})}}),[s,u,f,a,l,r,e,o,i])}(s,{replace:o,state:i,target:u,preventScrollReset:f,relative:a});return t.createElement("a",se({},d,{href:p,onClick:l?r:function(e){r&&r(e),e.defaultPrevented||h(e)},ref:n,target:u}))}));var me,ve;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmitImpl="useSubmitImpl",e.UseFetcher="useFetcher"})(me||(me={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(ve||(ve={}));function ge(){return t.createElement("svg",{viewBox:"0 0 326 333",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t.createElement("g",{id:"logo"},t.createElement("g",{id:"sides"},t.createElement("path",{id:"Vector",d:"M87.4403 86.4C90.5723 85.759 94.8263 85.845 97.8573 86.976C100.838 88.088 103.824 90.211 105.518 93.032C107.439 96.231 107.408 97.836 107.969 105.722C109.373 125.472 111.852 215.962 107.356 233.772C105.636 240.587 103.616 241.309 100.309 243.289C96.8583 245.355 90.8213 246.398 86.8263 245.595C82.9983 244.827 78.7823 241.226 76.7163 238.963C75.1613 237.261 74.9013 237.906 74.2643 233.772C72.0003 219.091 70.5733 116.361 74.2643 98.801C75.5513 92.676 77.1933 92.521 79.4743 90.437C81.6383 88.457 84.4813 87.003 87.4403 86.4Z",stroke:"white",strokeWidth:"2"}),t.createElement("path",{id:"Vector_2",d:"M226.44 87.4C229.572 86.759 233.826 86.845 236.857 87.976C239.838 89.088 242.824 91.211 244.518 94.032C246.439 97.231 246.408 98.836 246.969 106.722C248.373 126.472 250.852 216.962 246.356 234.772C244.636 241.587 242.616 242.309 239.309 244.289C235.858 246.355 229.821 247.398 225.826 246.595C221.998 245.827 217.782 242.226 215.716 239.963C214.161 238.261 213.901 238.906 213.264 234.772C211 220.091 209.573 117.361 213.264 99.801C214.551 93.676 216.193 93.521 218.474 91.437C220.638 89.457 223.481 88.003 226.44 87.4Z",stroke:"white",strokeWidth:"2"})),t.createElement("g",{id:"middle"},t.createElement("path",{id:"Vector_3",d:"M158.488 87.786C161.62 87.145 165.874 87.231 168.905 88.362C171.886 89.474 174.872 91.597 176.566 94.418C178.487 97.617 178.456 99.222 179.017 107.108C180.421 126.858 182.9 217.348 178.404 235.158C176.684 241.973 174.664 242.695 171.357 244.675C167.906 246.741 161.869 247.784 157.874 246.981C154.046 246.213 149.83 242.612 147.764 240.349C146.209 238.647 145.949 239.292 145.312 235.158C143.048 220.477 141.621 117.747 145.312 100.187C146.599 94.062 148.241 93.907 150.522 91.823C152.686 89.843 155.529 88.389 158.488 87.786Z",stroke:"white",strokeWidth:"2"}))))}function ye(){return t.createElement("svg",{"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1200 120",preserveAspectRatio:"none"},t.createElement("path",{d:"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z",className:"shape-fill"}))}function be(){return t.createElement("svg",{"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1200 120",preserveAspectRatio:"none"},t.createElement("path",{d:"M0,0V7.23C0,65.52,268.63,112.77,600,112.77S1200,65.52,1200,7.23V0Z"}))}function we(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:1.5},t.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M18.75 19.5l-7.5-7.5 7.5-7.5m-6 15L5.25 12l7.5-7.5"}))}function ke(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:1.5},t.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M11.25 4.5l7.5 7.5-7.5 7.5m-6-15l7.5 7.5-7.5 7.5"}))}function Ee(){return t.createElement("svg",{"data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1200 120",preserveAspectRatio:"none"},t.createElement("path",{d:"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z",opacity:".25",className:"shape-fill"}),t.createElement("path",{d:"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z",opacity:".5",className:"shape-fill"}),t.createElement("path",{d:"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z",className:"shape-fill"}))}function Se(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColor"},t.createElement("stop",{offset:"5%",style:{stopColor:"#5e17eb"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#cb6ce6"}}))),t.createElement("path",{fillRule:"evenodd",d:"M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.39-2.908a.75.75 0 01.766.027l3.5 2.25a.75.75 0 010 1.262l-3.5 2.25A.75.75 0 018 12.25v-4.5a.75.75 0 01.39-.658z",clipRule:"evenodd"}))}function Ce(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColor"},t.createElement("stop",{offset:"5%",style:{stopColor:"#5e17eb"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#cb6ce6"}}))),t.createElement("path",{d:"M5.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75A.75.75 0 007.25 3h-1.5zM12.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75a.75.75 0 00-.75-.75h-1.5z"}))}function xe(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColor"},t.createElement("stop",{offset:"5%",style:{stopColor:"#5e17eb"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#cb6ce6"}}))),t.createElement("path",{d:"M5.25 3A2.25 2.25 0 003 5.25v9.5A2.25 2.25 0 005.25 17h9.5A2.25 2.25 0 0017 14.75v-9.5A2.25 2.25 0 0014.75 3h-9.5z"}))}function _e(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColor"},t.createElement("stop",{offset:"5%",style:{stopColor:"#5e17eb"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#cb6ce6"}}))),t.createElement("path",{d:"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z"}))}function Le(){return t.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColor"},t.createElement("stop",{offset:"5%",style:{stopColor:"#5e17eb"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#cb6ce6"}}))),t.createElement("path",{d:"M7.712 4.819A1.5 1.5 0 0110 6.095v2.973c.104-.131.234-.248.389-.344l6.323-3.905A1.5 1.5 0 0119 6.095v7.81a1.5 1.5 0 01-2.288 1.277l-6.323-3.905a1.505 1.505 0 01-.389-.344v2.973a1.5 1.5 0 01-2.288 1.276l-6.323-3.905a1.5 1.5 0 010-2.553L7.712 4.82z"}))}function Pe(e){var n=e.className;return t.createElement("svg",{width:"20px",height:"20px",viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg",className:n},t.createElement("path",{d:"M16 17a3 3 0 0 1-3 3h-2a3 3 0 0 1 0-6h2a3 3 0 0 1 1 .17V1l6-1v4l-4 .67V17zM0 3h12v2H0V3zm0 4h12v2H0V7zm0 4h12v2H0v-2zm0 4h6v2H0v-2z"}))}function Ne(){return t.createElement("svg",{version:"1.1",id:"Capa_1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",x:"0px",y:"0px",width:"306.405px",height:"306.405px",viewBox:"0 0 306.405 306.405",xmlSpace:"preserve"},t.createElement("defs",null,t.createElement("linearGradient",{id:"fillingColorLogo"},t.createElement("stop",{offset:"5%",style:{stopColor:"#4ad8ce"}}),t.createElement("stop",{offset:"50%",style:{stopColor:"#ffffff"}}),t.createElement("stop",{offset:"95%",style:{stopColor:"#c939e6"}}))),t.createElement("g",null,t.createElement("g",null,t.createElement("path",{d:"M133.652,0.59C59.838,0.59,0,60.426,0,134.24c0,73.817,59.838,133.655,133.652,133.655c1.129,0,2.245-0.062,3.368-0.088 l-9.603-10.89c-0.339-0.538-8.091-13.37,9.018-27.563c12.148-10.081,29.544-1.107,38.932,5.22v-63.727 c-10.18,11.589-25.07,18.941-41.715,18.941c-30.681,0-55.554-24.876-55.554-55.554s24.873-55.553,55.554-55.553 c28.796,0,52.46,21.906,55.267,49.961c2.138-0.764,4.406-1.258,6.804-1.258c4.691,0,8.958,1.66,12.401,4.332v-7.369 c0-11.226,9.129-20.355,20.355-20.355c10.604,0,19.231,8.164,20.174,18.525c3.479-2.763,7.813-4.484,12.583-4.484 c1.791,0,3.49,0.3,5.146,0.735C258.714,52.245,202.236,0.59,133.652,0.59z M133.652,60.486c-40.669,0-73.754,33.085-73.754,73.754 c0,2.928-2.377,5.302-5.303,5.302c-2.928,0-5.302-2.374-5.302-5.302c0-46.518,37.842-84.359,84.359-84.359 c2.928,0,5.302,2.374,5.302,5.302C138.955,58.109,136.581,60.486,133.652,60.486z M133.652,30.15 c-57.392,0-104.085,46.693-104.085,104.085c0,2.929-2.376,5.303-5.302,5.303c-2.928,0-5.303-2.374-5.303-5.303 c0-63.24,51.45-114.69,114.69-114.69c2.928,0,5.302,2.375,5.302,5.303S136.581,30.15,133.652,30.15z"}),t.createElement("path",{d:"M115.216,134.24c0,10.165,8.272,18.436,18.437,18.436s18.437-8.271,18.437-18.436s-8.272-18.437-18.437-18.437 S115.216,124.076,115.216,134.24z"}),t.createElement("path",{d:"M273.643,166.466v-28.078c0-4.699-2.651-8.738-6.503-10.849c-1.761-0.96-3.75-1.561-5.894-1.561 c-6.845,0-12.406,5.564-12.406,12.404v61.597h-3.977h-3.978v-61.591v-14.041c0-6.84-5.561-12.401-12.396-12.401 c-6.845,0-12.406,5.562-12.406,12.401v23.4v52.231l0,0h-7.954v-52.237c0-6.84-5.561-12.404-12.401-12.404 c-2.459,0-4.748,0.743-6.675,1.983c-3.438,2.206-5.731,6.046-5.731,10.427v11.268v92.17l-6.576-5.659 c-0.233-0.197-23.563-19.724-35.235-10.051c-10.721,8.891-8.076,15.768-7.464,17.01l13.005,14.737l34.08,38.593h125.274V166.466 c0-6.846-5.562-12.407-12.402-12.407c-6.84,0-12.406,5.562-12.406,12.407v33.513h-7.954l0,0V166.466z"}))),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null),t.createElement("g",null))}function ze(){return t.createElement("svg",{width:"256",height:"256",viewBox:"0 0 256 256",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t.createElement("g",null,t.createElement("path",{id:"Vector",className:"lines",d:"M129.27 142.19L43.95 95.37C43.5998 95.1759 43.2052 95.0761 42.8049 95.0804C42.4045 95.0847 42.0122 95.193 41.6663 95.3947C41.3205 95.5964 41.0329 95.8845 40.832 96.2308C40.631 96.5771 40.5235 96.9696 40.52 97.37C40.11 115.37 38.52 190.92 40.61 193.37C43.92 197.25 125.69 244.53 129.28 244.53C132.87 244.53 213.81 195.77 217.95 193.37C221.61 191.26 218.81 115.17 218.1 97.29C218.082 96.8968 217.964 96.5146 217.758 96.1794C217.551 95.8442 217.263 95.567 216.92 95.374C216.577 95.181 216.19 95.0784 215.797 95.0759C215.403 95.0735 215.015 95.1712 214.67 95.36L129.27 142.19Z",fill:"#191919"}),t.createElement("path",{id:"Vector_2",className:"lines",d:"M129.27 252.5C126.8 252.5 124.46 252.5 80.83 227.3C37.91 202.51 35.44 199.62 34.51 198.53C32.13 195.73 31.23 194.68 31.62 151.08C31.81 129.61 32.31 106.21 32.52 97.15C32.5598 95.378 33.0558 93.6463 33.96 92.1218C34.8642 90.5974 36.1461 89.3319 37.682 88.4473C39.2179 87.5628 40.9559 87.0891 42.7282 87.072C44.5006 87.055 46.2474 87.4951 47.8 88.35L129.28 133.06L210.82 88.32C212.364 87.4745 214.098 87.0381 215.859 87.052C217.619 87.066 219.346 87.53 220.877 88.3999C222.407 89.2698 223.689 90.5166 224.602 92.0219C225.514 93.5272 226.027 95.2409 226.09 97C226.45 106.09 227.32 129.57 227.66 151.15C227.85 163.39 227.83 173.15 227.66 180.26C227.28 192.42 226.66 197.63 222 200.33C221.33 200.72 218.6 202.33 214.5 204.8C134.48 252.5 132.63 252.5 129.27 252.5V252.5ZM48 188.91C59.93 197.03 116.16 229.52 129.26 235.91C137.26 231.91 163.15 216.81 206.26 191.05L211.18 188.11C212.18 178.95 211.95 147.35 210.47 106.81L133.12 149.2C131.94 149.848 130.616 150.187 129.27 150.187C127.924 150.187 126.6 149.848 125.42 149.2L48.31 106.89C47.43 148.63 47.3 179.89 48 188.91V188.91Z",fill:"#191919"}),t.createElement("path",{id:"Vector_3",d:"M40.6 91.49L129.27 44.2L217.94 91.49L129.27 140.14L40.6 91.49Z",fill:"white"}),t.createElement("path",{id:"Vector_4",d:"M130.52 41.08V137.02L41.85 88.36L130.52 41.08Z",fill:"#E6E6E6"}),t.createElement("path",{id:"face1",d:"M129.27 142.19L40.6 93.53C40.6 93.53 38.22 190.53 40.6 193.34C43.91 197.22 125.68 244.5 129.27 244.5C132.86 244.5 213.8 195.74 217.94 193.34C222.08 190.94 217.94 93.53 217.94 93.53L129.27 142.19Z"}),t.createElement("path",{id:"face2",d:"M129.27 142.19C128.27 144.25 127.27 245 129.27 244.5C135.62 242.94 214.59 197.57 218.27 192.75C219.85 190.66 220.66 94.82 217.96 93.53C215.26 92.24 130.3 140.13 129.27 142.19Z"}),t.createElement("path",{id:"Vector_5",d:"M217.42 88C222.01 85.47 246.88 71.67 245.57 70.91C244.26 70.15 157.9 24.97 155.72 24.31C153.72 23.7 131.24 38.41 127.59 40.81C123.83 38.2 96.77 19.57 93.69 21.29C90.38 23.09 10.3 67.77 7.43 69.43C4.79 71 34.22 85.79 38.77 88.07C34.52 90.22 9.08 102.66 10.65 103.56C12.22 104.46 94.47 153 98.87 153.48C101.7 153.79 124.67 139.24 127.69 137.24C131.07 139.48 158.69 157.72 161.45 156.16L248.58 106.16C250.19 105.28 222.66 90.72 217.42 88V88ZM127.69 136.86L39.94 88.05L127.53 41.33L215.84 87.91L127.69 136.86Z",fill:"#191919"}),t.createElement("path",{id:"Vector_6",className:"lines",d:"M161.14 164.31C157.14 164.31 151.67 161.63 140.67 154.98C135.88 152.08 131.03 148.98 127.67 146.78C124.8 148.58 121.03 150.92 117.34 153.11C103.93 161 101 161.76 98 161.44C95.44 161.16 92.26 160.82 8.63 111.66L6.63 110.49C5.35695 109.756 4.30696 108.69 3.59196 107.406C2.87695 106.123 2.52375 104.669 2.57 103.2C2.74 97.68 7.18 95.33 16.91 90.2C18.29 89.47 19.73 88.72 21.16 87.99L17.58 86C3.32 78.24 -0.57 75.36 -0.73 69.94C-0.773163 68.4386 -0.408103 66.9537 0.326266 65.6434C1.06063 64.3332 2.13678 63.2468 3.44 62.5C5.64 61.23 50.22 36.35 87.23 15.7L89.8 14.27C94.96 11.39 100.8 13.95 114.64 22.61C119.45 25.61 124.25 28.81 127.7 31.15C152.6 14.95 154.49 15.53 158.07 16.63C161.49 17.63 248.87 63.54 249.58 63.96C250.808 64.6805 251.826 65.7089 252.535 66.9436C253.243 68.1782 253.617 69.5765 253.62 71C253.57 76.43 250.1 78.44 237.21 85.93L234 87.79L238.77 90.42C253.1 98.42 256.49 100.49 256.59 105.93C256.618 107.384 256.255 108.82 255.539 110.086C254.823 111.353 253.781 112.404 252.52 113.13L173.37 158.51L165.37 163.09C164.095 163.87 162.634 164.291 161.14 164.31V164.31ZM142.89 137.55C150.44 142.29 156.89 146.04 160.26 147.63L165.47 144.63L233.37 105.7C229.06 103.27 223.43 100.19 216.67 96.6L142.89 137.55ZM26.18 103.4C70.43 129.33 92.36 141.61 99.12 144.94C102.03 143.52 107.27 140.48 112.3 137.43L39.2 96.8C33.69 99.55 29.44 101.71 26.18 103.4V103.4ZM56.67 88.2L127.67 127.68L199 88.1L127.52 50.4L56.67 88.2ZM22.22 70.32C26.8 72.89 32.77 76.06 39.22 79.32L112.5 40.24C106.84 36.4096 100.971 32.8975 94.92 29.72C54.29 52.39 33.08 64.24 22.21 70.32H22.22ZM142.92 40.41L216.6 79.27C221.6 76.49 226.18 73.88 229.94 71.68C209 60.68 166.66 38.68 155.35 32.97C152.73 34.38 148.27 37 142.92 40.41V40.41Z",fill:"#191919"}),t.createElement("path",{id:"Vector_7",d:"M218.42 88C218.5 86.7 246.88 71.67 245.57 70.91C244.26 70.15 157.9 24.97 155.72 24.31C153.72 23.7 128.18 40.74 127.59 40.81C127 40.88 96.76 19.53 93.69 21.25C90.38 23.09 10.3 67.77 7.43 69.43C4.79 71 38.7 87.23 38.77 88.07C38.84 88.91 9.08 102.66 10.64 103.56C12.2 104.46 94.47 153 98.87 153.48C101.7 153.79 126.79 137.24 127.69 137.24C128.59 137.24 158.69 157.72 161.45 156.16L248.58 106.16C250.19 105.28 218.34 89.27 218.42 88V88ZM127.69 136.86C126.69 136.78 39.97 88.72 39.95 88.08C39.93 87.44 126.95 41.45 127.54 41.36C128.13 41.27 215.86 86.69 215.85 87.94C215.84 89.19 128.7 136.91 127.69 136.83V136.86Z",fill:"white"}),t.createElement("path",{id:"Vector_8",d:"M72.15 187.68L71.71 152C71.71 149.77 73.76 149.3 75.42 151.18L100.86 180C102.45 181.81 102.48 184.47 100.92 184.89L75.92 191.7C74.29 192.19 72.18 189.91 72.15 187.68V187.68Z",fill:"white"}),t.createElement("path",{id:"Vector_9",d:"M128.67 142.67C128 159.84 127.67 220.34 129.28 244.5Z",fill:"#D32920"}),t.createElement("path",{id:"Vector_10",className:"lines",d:"M129.27 248.5C128.254 248.502 127.276 248.118 126.533 247.425C125.79 246.733 125.339 245.783 125.27 244.77C123.63 220.09 124 159.55 124.66 142.52C124.68 141.995 124.804 141.479 125.024 141.001C125.244 140.524 125.555 140.094 125.941 139.737C126.327 139.38 126.779 139.102 127.272 138.92C127.766 138.738 128.29 138.655 128.815 138.675C129.34 138.695 129.856 138.819 130.334 139.039C130.811 139.259 131.241 139.57 131.598 139.956C131.955 140.342 132.233 140.794 132.415 141.287C132.597 141.781 132.68 142.305 132.66 142.83C132.02 159.27 131.66 220.26 133.26 244.24C133.295 244.765 133.227 245.291 133.058 245.79C132.89 246.288 132.625 246.748 132.278 247.144C131.932 247.539 131.511 247.863 131.039 248.095C130.568 248.328 130.055 248.466 129.53 248.5H129.27Z",fill:"#191919"})),t.createElement("defs",null,t.createElement("clipPath",{id:"clip0_0_1"},t.createElement("rect",{width:"256",height:"256",fill:"white"}))))}var Te=a(697),Oe=a.n(Te);function Me(e){var n=e.notification;return t.createElement("div",{id:"notification"},t.createElement("span",null,n))}Me.propTypes={notification:Oe().string},Me.defaultProps={notification:""};const Re=Me;function Ie(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var r,a,l=[],o=!0,i=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(l.push(r.value),!t||l.length!==t);o=!0);}catch(e){i=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(i)throw a}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Fe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Fe(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Fe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Ae(){var e=Ie((0,t.useState)(!1),2),n=e[0],r=e[1];return t.createElement("div",{id:"home-page"},t.createElement("div",{id:"intro"},t.createElement("div",{id:"home-headers-logo"},t.createElement("h1",null,"Welcome to "),t.createElement("h3",null,"Home to your favorite music"),t.createElement(ge,null)),t.createElement("div",{id:"get-started-action"},t.createElement("button",{type:"button"},t.createElement("a",{href:"#get-started-options"},"Get Started"))),t.createElement("div",{className:"separator"},t.createElement(ye,null))),t.createElement("div",{id:"get-started-options"},t.createElement("div",{id:"get-started-intro"},t.createElement("h4",null,"We offer you the opportunity to listen and enjoy your favorite music either by listening to a set of music we selected for you or by connecting to your spotify and bringing you favorite songs to Music",t.createElement("span",null,"Bay")),t.createElement("h1",null,"So what are you choosing today ? ")),t.createElement("div",{id:"home-btns"},t.createElement(he,{to:"/categories"},t.createElement("button",{type:"button"},"Start Listening now")),t.createElement("button",{type:"button",onClick:function(){r(!0),setTimeout((function(){return r(!1)}),5e3)}},"Connect To Spotify"))),n?t.createElement(Re,{notification:"This feautre is not available yet ! ごめん"}):null)}function je(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var r,a,l=[],o=!0,i=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(l.push(r.value),!t||l.length!==t);o=!0);}catch(e){i=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(i)throw a}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return De(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return De(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function De(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Ue(e){var n=je((0,t.useState)(!1),2),r=n[0],a=n[1],l=je((0,t.useState)(""),2),o=l[0],i=l[1],u=e.displayType;(0,t.useEffect)((function(){i("hamburger"===u&&r?"show-hamburger-bar":"hamburger"!==u||r?u:"hide-hamburger-bar")}));var c=function(){a(!r)};return t.createElement(t.Fragment,null,t.createElement("button",{type:"button",className:"hamburger"===u?"show-toggle":"hide-toggle",onClick:c},t.createElement(ge,null),t.createElement("span",null,"Music bay")),t.createElement("nav",{className:o},t.createElement("div",{id:"full-bar"},t.createElement("div",{id:"brand"},t.createElement(ge,null),t.createElement("h3",null,"Music Bay")),t.createElement("div",{id:"links"},t.createElement("ul",null,t.createElement("li",null,t.createElement(he,{to:"/"},"Home")),t.createElement("li",null,t.createElement(he,{to:"/categories"},"Categories")),t.createElement("li",null,t.createElement(he,{to:"/categories"},"Connect to spotify")))),t.createElement("button",{type:"button",className:"hamburger"===u?"show-close":"hide-close",onClick:c},"☓ Close"))))}Ue.propTypes={displayType:Oe().string},Ue.defaultProps={displayType:"vista"};const Ve=Ue;const Be=function(e){return function(){var n;if("/player"===window.location.pathname)n="hamburger";else n="vista";return t.createElement(t.Fragment,null,t.createElement(Ve,{displayType:n}),t.createElement(e,null))}};function $e(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var r,a,l=[],o=!0,i=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(l.push(r.value),!t||l.length!==t);o=!0);}catch(e){i=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(i)throw a}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return We(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return We(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function We(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var He=[{id:0,genre:"Rock"},{id:1,genre:"Rap"},{id:2,genre:"Jazz"},{id:3,genre:"Country"},{id:4,genre:"Lofi"}];const Qe=Be((function(){var e=$e((0,t.useState)(2),2),n=e[0],r=e[1],a=function(e){e.target.closest("#left-swipe")?r(n>0?n-1:4):r(4===n?0:n+1)};return t.createElement("div",{id:"categories"},t.createElement("div",{id:"heading"},t.createElement("h1",null,"what to you want to hear today ? ")),t.createElement("div",{id:"cards"},t.createElement("div",{id:"separator"},t.createElement(be,null)),t.createElement("button",{className:"card-side",id:"left-swipe",type:"button",onClick:a},t.createElement(we,{id:"left-swipe=logo"})),t.createElement(he,{to:"/player",state:{genre:He[n].genre},className:"card-main",id:n},t.createElement("h5",{className:"card-header"},He[n].genre)),t.createElement("button",{className:"card-side",id:"right-swipe",type:"button",onClick:a},t.createElement(ke,{id:"right-swipe-logo"}))))}));function Ge(e){return Ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ge(e)}function Ke(){Ke=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",l=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function i(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{i({},"")}catch(e){i=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof f?t:f,l=Object.create(a.prototype),o=new S(r||[]);return l._invoke=function(e,t,n){var r="suspendedStart";return function(a,l){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw l;return x()}for(n.method=a,n.arg=l;;){var o=n.delegate;if(o){var i=w(o,n);if(i){if(i===s)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=c(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===s)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}(e,n,o),l}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var s={};function f(){}function d(){}function p(){}var h={};i(h,a,(function(){return this}));var m=Object.getPrototypeOf,v=m&&m(m(C([])));v&&v!==t&&n.call(v,a)&&(h=v);var g=p.prototype=f.prototype=Object.create(h);function y(e){["next","throw","return"].forEach((function(t){i(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function r(a,l,o,i){var u=c(e[a],e,l);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==Ge(f)&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,o,i)}),(function(e){r("throw",e,o,i)})):t.resolve(f).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,i)}))}i(u.arg)}var a;this._invoke=function(e,n){function l(){return new t((function(t,a){r(e,n,t,a)}))}return a=a?a.then(l,l):l()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return s;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,s;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,s):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,s)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function C(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,l=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return l.next=l}}return{next:x}}function x(){return{value:void 0,done:!0}}return d.prototype=p,i(g,"constructor",p),i(p,"constructor",d),d.displayName=i(p,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,i(e,o,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},y(b.prototype),i(b.prototype,l,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,r,a,l){void 0===l&&(l=Promise);var o=new b(u(t,n,r,a),l);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},y(g),i(g,o,"Generator"),i(g,a,(function(){return this})),i(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=C,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var l=this.tryEntries[a],o=l.completion;if("root"===l.tryLoc)return r("end");if(l.tryLoc<=this.prev){var i=n.call(l,"catchLoc"),u=n.call(l,"finallyLoc");if(i&&u){if(this.prev<l.catchLoc)return r(l.catchLoc,!0);if(this.prev<l.finallyLoc)return r(l.finallyLoc)}else if(i){if(this.prev<l.catchLoc)return r(l.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return r(l.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var l=a;break}}l&&("break"===e||"continue"===e)&&l.tryLoc<=t&&t<=l.finallyLoc&&(l=null);var o=l?l.completion:{};return o.type=e,o.arg=t,l?(this.method="next",this.next=l.finallyLoc,s):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),s},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),s}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;E(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:C(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),s}},e}function Ze(e,t,n,r,a,l,o){try{var i=e[l](o),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function qe(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var l=e.apply(t,n);function o(e){Ze(l,r,a,o,i,"next",e)}function i(e){Ze(l,r,a,o,i,"throw",e)}o(void 0)}))}}function Ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Xe=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.context=t,this.musicInfo=n,this.buffer=[]}var t,n,r,a,l;return t=e,n=[{key:"loadSound",value:(l=qe(Ke().mark((function e(t,n){var r,a,l;return Ke().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t);case 2:return r=e.sent,e.next=5,r.arrayBuffer();case 5:return a=e.sent,e.next=8,this.context.decodeAudioData(a);case 8:l=e.sent,this.buffer[n]=l;case 10:case"end":return e.stop()}}),e,this)}))),function(e,t){return l.apply(this,arguments)})},{key:"loadAll",value:(a=qe(Ke().mark((function e(){var t,n;return Ke().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=[],this.musicInfo.forEach((function(e){t.push(e[1].link)})),n=0;case 3:if(!(n<t.length)){e.next=9;break}return e.next=6,this.loadSound(t[n],n);case 6:n+=1,e.next=3;break;case 9:return e.abrupt("return",this.buffer);case 10:case"end":return e.stop()}}),e,this)}))),function(){return a.apply(this,arguments)})}],n&&Ye(t.prototype,n),r&&Ye(t,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();const Je=function(){return t.createElement("div",{id:"loading-display"},t.createElement("div",{id:"loader"}),t.createElement("span",{id:"loader-details"},"Loading Music for you...."))};var et="http://localhost:5050/public/";const tt=function(e){var t=[],n={Rap:{},Jazz:{1:{name:"Wondeful World",owner:"Louis Armstrong",link:"".concat(et,"music/").concat(e,"/jazz1.mp3")},2:{name:"Sky is Crying",owner:"Gary B.B. Coleman",link:"".concat(et,"music/").concat(e,"/jazz2.mp3")},3:{name:"Fly Me to the moon",owner:"Frank Sinatra",link:"".concat(et,"music/").concat(e,"/jazz3.mp3")},4:{name:"Fever",owner:"Peggy Lee",link:"".concat(et,"music/").concat(e,"/jazz4.mp3")}},Lofi:{},Rock:{},Country:{1:{name:"Tennessee Whiskey",owner:"Chris Stapleton",link:"".concat(et,"music/").concat(e,"/country1.mp3")}}},r=Object.keys(n[e]),a=Object.values(n[e]);return r.forEach((function(e,n){return t.push([e,a[n]])})),t};function nt(e){return nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},nt(e)}function rt(){rt=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",l=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function i(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{i({},"")}catch(e){i=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof f?t:f,l=Object.create(a.prototype),o=new S(r||[]);return l._invoke=function(e,t,n){var r="suspendedStart";return function(a,l){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw l;return x()}for(n.method=a,n.arg=l;;){var o=n.delegate;if(o){var i=w(o,n);if(i){if(i===s)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=c(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===s)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}(e,n,o),l}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var s={};function f(){}function d(){}function p(){}var h={};i(h,a,(function(){return this}));var m=Object.getPrototypeOf,v=m&&m(m(C([])));v&&v!==t&&n.call(v,a)&&(h=v);var g=p.prototype=f.prototype=Object.create(h);function y(e){["next","throw","return"].forEach((function(t){i(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function r(a,l,o,i){var u=c(e[a],e,l);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==nt(f)&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,o,i)}),(function(e){r("throw",e,o,i)})):t.resolve(f).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,i)}))}i(u.arg)}var a;this._invoke=function(e,n){function l(){return new t((function(t,a){r(e,n,t,a)}))}return a=a?a.then(l,l):l()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return s;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,s;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,s):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,s)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function C(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,l=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return l.next=l}}return{next:x}}function x(){return{value:void 0,done:!0}}return d.prototype=p,i(g,"constructor",p),i(p,"constructor",d),d.displayName=i(p,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,i(e,o,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},y(b.prototype),i(b.prototype,l,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,r,a,l){void 0===l&&(l=Promise);var o=new b(u(t,n,r,a),l);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},y(g),i(g,o,"Generator"),i(g,a,(function(){return this})),i(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=C,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var l=this.tryEntries[a],o=l.completion;if("root"===l.tryLoc)return r("end");if(l.tryLoc<=this.prev){var i=n.call(l,"catchLoc"),u=n.call(l,"finallyLoc");if(i&&u){if(this.prev<l.catchLoc)return r(l.catchLoc,!0);if(this.prev<l.finallyLoc)return r(l.finallyLoc)}else if(i){if(this.prev<l.catchLoc)return r(l.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return r(l.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var l=a;break}}l&&("break"===e||"continue"===e)&&l.tryLoc<=t&&t<=l.finallyLoc&&(l=null);var o=l?l.completion:{};return o.type=e,o.arg=t,l?(this.method="next",this.next=l.finallyLoc,s):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),s},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),s}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;E(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:C(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),s}},e}function at(e){return function(e){if(Array.isArray(e))return lt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return lt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return lt(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function lt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ot(e,t,n,r,a,l,o){try{var i=e[l](o),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function it(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var l=e.apply(t,n);function o(e){ot(l,r,a,o,i,"next",e)}function i(e){ot(l,r,a,o,i,"throw",e)}o(void 0)}))}}function ut(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ct(e,t){return ct=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ct(e,t)}function st(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=pt(e);if(t){var a=pt(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return ft(this,n)}}function ft(e,t){if(t&&("object"===nt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return dt(e)}function dt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function pt(e){return pt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},pt(e)}var ht=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ct(e,t)}(u,e);var n,r,a,l,o,i=st(u);function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).audioContext=new AudioContext,t.keepTrack=void 0,t.startedSince=0,t.MusicList=e.musicList,t.state={bufferAudio:[],gainNode:null,source:null,isLoadingMusic:!1,playedSongIndex:0,currentlyPlaying:!1,volume:100,elapsed:0,isShifting:!1},t.playAudio=t.playAudio.bind(dt(t)),t.startingSource=t.startingSource.bind(dt(t)),t.stopAudio=t.stopAudio.bind(dt(t)),t.switchSong=t.switchSong.bind(dt(t)),t.pauseAudio=t.pauseAudio.bind(dt(t)),t.changeVolume=t.changeVolume.bind(dt(t)),t.timeShift=t.timeShift.bind(dt(t)),t.keepingTrackSongLength=t.keepingTrackSongLength.bind(dt(t)),t}return n=u,r=[{key:"componentDidMount",value:function(){var e=this;this.setState({gainNode:this.audioContext.createGain(),source:this.audioContext.createBufferSource()},(function(){e.init()}))}},{key:"componentWillUnmount",value:function(){var e=this;this.state.currentlyPlaying&&this.stopAudio().then((function(){return e.audioContext.close()}))}},{key:"init",value:(o=it(rt().mark((function e(){var t,n,r=this;return rt().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.setState({isLoadingMusic:!0}),t=new Xe(this.audioContext,Object.values(this.MusicList)),e.next=4,t.loadAll();case 4:n=e.sent,this.setState({bufferAudio:at(n)},(function(){return r.setState({isLoadingMusic:!1})}));case 6:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})},{key:"startingSource",value:function(){var e=this.state,t=e.source,n=e.bufferAudio,r=e.playedSongIndex,a=e.gainNode,l=e.elapsed;t.buffer=n[r],t.connect(a),a.connect(this.audioContext.destination),t.start(0,l)}},{key:"playAudio",value:function(){var e=this.state,t=e.isLoadingMusic,n=e.elapsed,r=e.isShifting;t||(n>0?(r&&(this.startingSource(),this.setState({isShifting:!1})),this.audioContext.resume().catch((function(e){throw new Error(e)}))):this.startingSource(),this.keepingTrackSongLength(!0),this.setState({currentlyPlaying:!0}))}},{key:"pauseAudio",value:function(){var e=this;this.setState({currentlyPlaying:!1},(function(){return e.audioContext.suspend().then(e.keepingTrackSongLength)}))}},{key:"stopAudio",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.state.source;return new Promise((function(a){r.stop(),e.startedSince=t,e.keepingTrackSongLength(),e.setState({source:e.audioContext.createBufferSource(),elapsed:t,currentlyPlaying:!1,isShifting:n},a)}))}},{key:"switchSong",value:(l=it(rt().mark((function e(t){var n=this;return rt().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.state.currentlyPlaying){e.next=4;break}return e.next=4,this.stopAudio();case 4:this.setState((function(e){var r=n.audioContext.createBufferSource();if(t){if("song"===t.target.className)return{playedSongIndex:parseInt(t.target.id,10),source:r};if(t.target.closest("#prevSong"))return{playedSongIndex:e.playedSongIndex-1,source:r}}return{playedSongIndex:e.playedSongIndex+1,source:r}}),(function(){n.playAudio()}));case 5:case"end":return e.stop()}}),e,this)}))),function(e){return l.apply(this,arguments)})},{key:"changeVolume",value:function(e){var t=this.state,n=t.gainNode,r=t.volume;this.setState({volume:e.target.value},(function(){n.gain.value=r/100}))}},{key:"timeShift",value:function(e){var t=this,n=Math.round(100*parseFloat(e.target.value))/100;this.startedSince=n,this.stopAudio(n,!0).then((function(){return t.playAudio()}))}},{key:"keepingTrackSongLength",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=this.state,r=n.source,a=n.playedSongIndex;t?this.keepTrack=setInterval((function(){0!==Math.floor(r.buffer.duration-e.startedSince)?(e.startedSince+=1,e.setState((function(e){return{elapsed:e.elapsed+1}}))):a+1<e.MusicList.length?e.switchSong():e.stopAudio(0)}),1e3):clearInterval(this.keepTrack)}},{key:"render",value:function(){var e,n,r,a,l,o=this,i=this.state,u=i.currentlyPlaying,c=i.volume,s=i.playedSongIndex,f=i.elapsed,d=i.source,p=i.isLoadingMusic,h=this.props.genre;return p?t.createElement(Je,null):t.createElement("div",{id:"musicplayer_full"},t.createElement("div",{id:"music_list"},t.createElement("div",{id:"heading"},t.createElement(Pe,{className:"heading-logo"}),t.createElement("div",{id:"heading-texts"},t.createElement("h1",null,h," Hits"),t.createElement("p",null,"Playlist - ",t.createElement("span",null,this.MusicList.length," songs")))),0===this.MusicList.length?t.createElement("div",{id:"emptyList"},t.createElement(ze,null),t.createElement("h3",null,"Oops ! looks there's no ",h," songs at this moment")):t.createElement("div",{id:"songsList"},t.createElement("ul",null,this.MusicList.map((function(e,n){return t.createElement("li",{key:e[0]},t.createElement("button",{id:n,className:"song",type:"button",onClick:o.switchSong},e[1].name," ",t.createElement("span",{className:"owner_name"}," by ",e[1].owner)))}))))),t.createElement("div",{id:"controls"},t.createElement("div",{id:"separator"},t.createElement(Ee,null)),t.createElement("div",{id:"currentlyPlaying"},t.createElement(Ne,null),this.MusicList.length>0?t.createElement("div",null,t.createElement("span",{id:"currentlyPlayingName"},this.MusicList[s][1].name),t.createElement("span",{id:"currentlyPlayingSinger"},this.MusicList[s][1].owner)):null),t.createElement("div",null,t.createElement("div",null,t.createElement("button",{id:"prevSong",className:0===s||0===this.MusicList.length?"controlBtnNotActive":"controlBtnActive",type:"button",onClick:this.switchSong,disabled:0===s||0===this.MusicList.length},t.createElement(Le,null)),t.createElement("button",{className:u||0===this.MusicList.length?"controlBtnNotActive":"controlBtnActive",type:"button",onClick:this.playAudio,disabled:u||0===this.MusicList.length},t.createElement(Se,null)),t.createElement("button",{className:u?"controlBtnActive":"controlBtnNotActive",type:"button",onClick:this.pauseAudio,disabled:!u},t.createElement(Ce,null)),t.createElement("button",{className:u?"controlBtnActive":"controlBtnNotActive",type:"button",onClick:function(){return o.stopAudio()},disabled:!u},t.createElement(xe,null)),t.createElement("button",{className:s===this.MusicList.length-1||0===this.MusicList.length?"controlBtnNotActive":"controlBtnActive",type:"button",onClick:this.switchSong,disabled:s===this.MusicList.length-1||0===this.MusicList.length},t.createElement(_e,null))),t.createElement("div",{id:"song_progess_container"},t.createElement("input",{type:"range",value:f,onChange:this.timeShift,max:d&&d.buffer?d.buffer.duration:0,id:"song_progess"}),t.createElement("span",{id:"time-display"},d&&d.buffer?(e=d.buffer.duration,n=this.startedSince,r=e-n,a=Math.floor(r/60),l=Math.round(r%60),a<10&&(a="0".concat(a)),l<10&&(l="0".concat(l)),a.concat(":",l)):"00:00"))),t.createElement("div",null,t.createElement("label",{htmlFor:"volume"},"Volume"),t.createElement("input",{id:"volume",type:"range",onChange:this.changeVolume,value:c,min:0,max:100}))))}}],r&&ut(n.prototype,r),a&&ut(n,a),Object.defineProperty(n,"prototype",{writable:!1}),u}(t.Component);ht.propTypes={genre:Oe().string,musicList:Oe().arrayOf(Object)},ht.defaultProps={genre:"",musicList:[]};const mt=Be((vt=ht,function(){var e=G().state,n=tt(e.genre);return t.createElement(vt,{genre:e.genre,musicList:n})}));var vt;const gt=function(){return t.createElement(pe,null,t.createElement(oe,null,t.createElement(ae,{path:"/",element:t.createElement(Ae,null)}),t.createElement(ae,{path:"/categories",element:t.createElement(Qe,null)}),t.createElement(ae,{path:"/player",element:t.createElement(mt,null)})))};(0,r.s)(document.getElementById("root")).render(t.createElement(t.StrictMode,null,t.createElement(gt,null)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,